{
  "contractName": "LendingPoolInterface",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldInterestValidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newInterestValidator",
          "type": "address"
        }
      ],
      "name": "InterestValidatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InterestWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawn",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "createLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "contract ERC20Detailed",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IMarketRegistry",
          "name": "aMarketRegistry",
          "type": "address"
        },
        {
          "internalType": "contract TToken",
          "name": "aTToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "contract TToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMarketState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalSupplied",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalBorrowed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRepaid",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        }
      ],
      "name": "getDebtRatioFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldInterestValidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newInterestValidator\",\"type\":\"address\"}],\"name\":\"InterestValidatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InterestWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tTokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tTokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"createLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"getDebtRatioFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRepaid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IMarketRegistry\",\"name\":\"aMarketRegistry\",\"type\":\"address\"},{\"internalType\":\"contract TToken\",\"name\":\"aTToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"contract ERC20Detailed\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"contract TToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"cToken()\":{\"return\":\"the cToken address.\"},\"createLoan(uint256,address)\":{\"details\":\"This function only can be invoked by the LoansInterface implementation.It throws a require error if current ERC20 balance isn't enough to transfer the tokens.\",\"params\":{\"amount\":\"of tokens to transfer.\",\"borrower\":\"address which will receive the tokens.\"}},\"deposit(uint256)\":{\"details\":\"the user must call ERC20.approve function previously.\",\"params\":{\"amount\":\"of tokens to deposit in the pool.\"}},\"getMarketState()\":{\"return\":\"values that represent the global state across all markets.\"},\"initialize(address,address,address)\":{\"details\":\"It throws a require error if the contract is already initialized.\",\"params\":{\"aMarketRegistry\":\"the MarketRegistry contract.\",\"aTToken\":\"the Teller token to link to the lending pool.\",\"settingsAddress\":\"Settings contract address.\"}},\"lendingToken()\":{\"return\":\"the ERC20 lending token address.\"},\"repay(uint256,uint256,address)\":{\"details\":\"This function can be called ONLY by the Loans contract.It requires a ERC20.approve call before calling it.It throws a require error if borrower called ERC20.approve function before calling it.\",\"params\":{\"borrower\":\"address that is repaying the loan.\",\"interestAmount\":\"amount of tokens towards the interest.\",\"principalAmount\":\"amount of tokens towards the principal.\"}},\"tToken()\":{\"return\":\"the tToken address.\"},\"withdraw(uint256)\":{\"details\":\"It throws a require error if the contract hasn't enough tokens balance.It throws a require error if the holder hasn't enough tToken balance.\",\"params\":{\"amount\":\"of tokens to withdraw.\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"It gets the cToken address.\"},\"createLoan(uint256,address)\":{\"notice\":\"Once the loan is created, it transfers the amount of tokens to the borrower.\"},\"deposit(uint256)\":{\"notice\":\"It allows users to deposit tokens into the pool.\"},\"getMarketState()\":{\"notice\":\"It calculates the market state values across all markets.\"},\"initialize(address,address,address)\":{\"notice\":\"It initializes the contract state variables.\"},\"lendingToken()\":{\"notice\":\"It gets the lending token address.\"},\"repay(uint256,uint256,address)\":{\"notice\":\"It allows a borrower repaying their loan. \"},\"tToken()\":{\"notice\":\"It gets the tToken address.\"},\"withdraw(uint256)\":{\"notice\":\"It allows any tToken holder to burn their tToken tokens and withdraw their tokens.\"}},\"notice\":\"This interface defines the functions for a lending pool that holds all of the tokens that lenders transfer into the protocol.\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":\"LendingPoolInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xa6063f679f0bb7ace21a083a7784a3c676c3fad2f4428ef70b75cbd563520edd\",\"urls\":[\"bzz-raw://70e25936f772bd22a2fb1ef01e8ac6143c5c30ef336f8a501d3c8cb55da98c43\",\"dweb:/ipfs/QmQwfKwmrda4iPsbD6iLcq8UM2bNwgAGv21M8JSX5tQ6Da\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol\":{\"keccak256\":\"0x383aca1ee1f1431b8583243bfaa979b7993aeb463e31ca4c8fb03cdeba4d1a3b\",\"urls\":[\"bzz-raw://fc2269440f57e20546dbf5706ad0b9e6298494cacdf1541fdaa1827c0f7b47c0\",\"dweb:/ipfs/QmSqpLwb8pEp99zi4di83SNJzr4t47Wa7oJhGNdEUoMCHq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/AssetSettingsInterface.sol\":{\"keccak256\":\"0x0b58fed714f80a7ae2be1c4f9baa1ec360ea446e7bef2a88c79071696406bbe3\",\"urls\":[\"bzz-raw://d348870fc8d6e738573eda914c89b87d8e0e28708ec14ceae0f7f26ed43a1d1a\",\"dweb:/ipfs/QmRTRkf6GKX8fnG2kM2cHY3D72LoJzkp7scvDP6xHAornj\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x65b252d2e93c0fe47ba456e93bd6a9a24db46028b7312631597a7d36c2fc56ef\",\"urls\":[\"bzz-raw://b94bcfe3673d458956bd83e347fee518abff7195212125a39edbbe7975ccbe70\",\"dweb:/ipfs/QmYeHCxNJ4GMchBL2RQ6NsVjbRtRCdkNq9ZHe3dJxyR4DW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/IBaseUpgradeable.sol\":{\"keccak256\":\"0xede43efe3ee18011d12e627b72deefa11ed2495146c25de9614e9f665deccb50\",\"urls\":[\"bzz-raw://ee2b24a4bb55c300a7a33a85f657c57c646f3f495ec6ad95b25552f0b5c761df\",\"dweb:/ipfs/QmQFfvTwQTRBqs2sX8q8sCZi5qBEEUP95LZR4phybzoqfB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/IMarketRegistry.sol\":{\"keccak256\":\"0x0be46633fa37f4bdd154145b382f6dd1aa96dbda29d20fc5c44d915f88c57c55\",\"urls\":[\"bzz-raw://33db4899c5d6bb3a2734a3eb40679e985df2dc55a4c3dfbe294ea5b6f1e7da50\",\"dweb:/ipfs/QmWaZztMPN1mnoERvNmbrBf67uGSRYcR6dFGLT8Z3PTYag\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x9f968a4bf850ebfbf27a1d8da07a5af7a9d6db1283a3327622e2b9cec6986d48\",\"urls\":[\"bzz-raw://f54596a0f5c08d22d47e3628e7cb3a3ab9c1dbd3392bdc0fa3d498d01b0815f3\",\"dweb:/ipfs/QmTSdwf5S5VgD3cFWLajY9sK7MdhSmusu9VJFDcTDkznPb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xb07434b20f868dd1bb59fdff51671010be151fa5549e8cd62c4a7e855618a5fd\",\"urls\":[\"bzz-raw://1dabeed2f85b3666313d237fa4dd49225eaab60f153361545099e46aa486d68d\",\"dweb:/ipfs/QmRsoLCeJvYWdtTH9WN1XyS6h68xJX8tPahfytZ3xyx5se\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0x98edbbb7c1c937f925a2dfce75d8b00260c9b6b77d78272f84fae3aab8ff0f9d\",\"urls\":[\"bzz-raw://4aa62cd03c860b9aa31fada3d68b0533ba3e5a8632fcd8088f6a2f756c08945f\",\"dweb:/ipfs/Qmb173SFRqFyv49yjenHPT5dFmHgCi7reLZh9f1RzqeGZy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x09bd2761f299e58f03abba7ff908cb2d02ca5b3947cc4ab1be6b5598a41533ca\",\"urls\":[\"bzz-raw://712fe4975c46421f4d29a7a34ecc783fe3d2963bd4d1608be8c13ff143b2e6a1\",\"dweb:/ipfs/QmUqQPSTUaxULzPWh9aBGCPPRFFvCKnz2ThEKqxeGdnnmX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0x0999a0b3ed69426b0a6737339068fda8e0125910ce7de3296c421e9c46b5a293\",\"urls\":[\"bzz-raw://4a286aa56944fd12acebcabd02afee0029985748374a7dd7213d1fcae94a37fd\",\"dweb:/ipfs/QmdniFe52aUp9NkquUJ75cuqqu9zBgmjXc1fWCWNUvyPDz\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkAggregator.sol\":{\"keccak256\":\"0x162b32975e272aa1d86e9a36135d7da30a2dde633ac286e2ca54e6f734c083ea\",\"urls\":[\"bzz-raw://5df615261bc912ecf55210d58bff6122194b243236938d4f489e9053ab648c3e\",\"dweb:/ipfs/QmRokEM614TJUk1pDCo9uEd9CUSANHC73yx3RNZNmiNtDY\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0x3298d82a77b05c01c04d4759893e04128e3636ca94c548de1e774622cb0f1d89\",\"urls\":[\"bzz-raw://4a2d185d34a96269514a74d0f42d30ddc71020b90f3847c5a9bb31fbff87ec62\",\"dweb:/ipfs/QmQUSmaZzku7BDbEvEEtp2hmk8QtMZCHz457nNuKNW2FFv\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressArrayLib.sol\":{\"keccak256\":\"0xe28b4cca4292c36b193d8596960510bda9e1789bffa9f5c57b28f323c2552b4f\",\"urls\":[\"bzz-raw://e25116dc3e5176a928e550fb34ffc1ecf710efc1c385a65b1989d55d0b63d427\",\"dweb:/ipfs/QmRcKvxZMTEWne9ZHNHviszigz1SxzWFsgtJGFifPEtECj\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0xb6311a4caaab2cc3f783d476a1432e436d12b4ea45be92809b1adbeafc4d31c1\",\"urls\":[\"bzz-raw://643716fbfdf17e6936c46ee04c0355c27b1c052bee89918e97cfa78b8eb81d68\",\"dweb:/ipfs/QmSXTEHePHXfhk38F2Y4JP4Rr9ichFiSuDCpTL5PJ1v5pC\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/CacheLib.sol\":{\"keccak256\":\"0xa43ff6d740577dfeae4972671c9a60cdf9607d6e81cadc585955debe1ca38dd7\",\"urls\":[\"bzz-raw://ad94cfc3259b2e18be2d6faefd109a306394f94ec85c181995a8a547a4555a9e\",\"dweb:/ipfs/QmYBPyNaRohQXZzM9uixEV1oBrQrhFTTi5HpWPS7udZNh6\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0x0fb35b6b314b9fc7f4b9ed0c10f0b2a71e67c34157209cda1ebfc6c174ad3813\",\"urls\":[\"bzz-raw://e7031377ba277b419377f7aa4588c5250583bd3812d8056f60bce059b4fbfd6c\",\"dweb:/ipfs/QmWCoGshJUK75gPbGSzhx5bVHJgKLqngSwLDA5sD5TgHwq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0x45711c23615ebfcbc5e5140096cdda6f2155cefa961c71801456ac22302e88c9\",\"urls\":[\"bzz-raw://29b9546e58aef1416a28b387d1d4b14e351f9a34bb5fdf8c22d0bfcb1c74ccf5\",\"dweb:/ipfs/QmSh8TU8BWnJwk8MgaDUxGjKaA3Dsqef4ztQMrHcsuXzUh\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersLib.sol\":{\"keccak256\":\"0xaa858071cda31070104f3ad479213c5fa4d898568823c98b18de60cb1c097c21\",\"urls\":[\"bzz-raw://1d1c87d6a3022d35f30153b4398051756842395ab9d48f1caeb2b1f2ef16937d\",\"dweb:/ipfs/QmNPMUw2fQTyD2Xad4WqoGfndMWw1giUUUw3xcBTgGpY4b\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0x9848b264416dbafb5cca7ed93205956ccc1f0690dce1bc27a2dbfd8fa55fb13d\",\"urls\":[\"bzz-raw://85b5f94a3d3f627025e07901114c332e34e0e396caf409059461ab34e0fc1c45\",\"dweb:/ipfs/QmUqS1ZAzyRamvpjZNuaepqprnQFdWch7Ug6xXrgXDfz6v\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0a63860141bab4588a5cd4af606b9a27ddd29aa7554029cb8b89b703d444f28b\",\"urls\":[\"bzz-raw://26c98caa3604ff8fca7ad11716bdec73ffc17195a74dac4ef61c6e2373edecda\",\"dweb:/ipfs/QmcxyVdVmQfXWpc6MJXauquD8hT5XVVcVLCfUouHUrXf98\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0x20ab9e90a20d34b38bb199555819461f36fb5b17baa41a9810f50e4cf3872f27\",\"urls\":[\"bzz-raw://a4e88fa632a430a52d867fa38c0455d2583d4f4ffee04d68646c6da811375970\",\"dweb:/ipfs/QmR627guCZS3dsjcYyFBB2U4HcVdEq1kGKpkA5P5czK9b8\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x7b120b4e46e83f36d8f82b56d637403dc5d12a4f3c314e031bb8ff47bf2638ed\",\"urls\":[\"bzz-raw://8f584207aca4d9fa909098ce107929d88ecb30b851c813cc3a9a80b02ed7aa21\",\"dweb:/ipfs/QmZdGPNX9cmZ7r1VVoKzZpXhFGJFtuBAAR94cWAh32pXDi\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x64fa8b255860b1cf2661a2d87ca287c21479edf18673ca694a770b6498e2de39\",\"urls\":[\"bzz-raw://ee19cc8583ee342d285c32a74bdc6050ac3fda11530a20fddadc8b1e9cc8f9be\",\"dweb:/ipfs/QmYRwA8umXm2gBbeWDVXWA1ADVFJu2eVn1xofkCGJrkxkz\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xacc87fdd0c5891084d0a2d801bb968d864f6bebacad14767a399b5b0ad3511f3\",\"urls\":[\"bzz-raw://d7eab097c04947df94daf86e2a5f6f461774028ba9e85d30b91550c6a42954bc\",\"dweb:/ipfs/QmPmVqMzTqBWh5Dcfo1U7bmUMGDLCEZPqwmRVukyM8YxcB\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x636b9f52b4ef5795c35a189a94e95a8f909ed1f7ef799e0218b71d97b3a780a0\",\"urls\":[\"bzz-raw://5c4813bfde66e6d6790eab4b44cf99b5eefe675f9726af454d8885c5c9959db4\",\"dweb:/ipfs/QmT83dCUn1yJFN9ftoJ9RWmJfsYosNyktuQkjRRfDWGLzp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Utils\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\n\n// Interfaces\nimport \"./IMarketRegistry.sol\";\n\n// Contracts\nimport \"../base/TToken.sol\";\n\n/**\n    @notice This interface defines the functions for a lending pool that holds all of the tokens that lenders transfer into the protocol.\n\n    @author develop@teller.finance\n */\ninterface LendingPoolInterface {\n    /**\n        @notice It allows users to deposit tokens into the pool.\n        @dev the user must call ERC20.approve function previously.\n        @param amount of tokens to deposit in the pool.\n    */\n    function deposit(uint256 amount) external;\n\n    /**\n        @notice It allows any tToken holder to burn their tToken tokens and withdraw their tokens.\n        @param amount of tokens to withdraw.\n        @dev It throws a require error if the contract hasn't enough tokens balance.\n        @dev It throws a require error if the holder hasn't enough tToken balance.\n     */\n    function withdraw(uint256 amount) external;\n\n    /**\n        @notice It allows a borrower repaying their loan. \n        @dev This function can be called ONLY by the Loans contract.\n        @dev It requires a ERC20.approve call before calling it.\n        @dev It throws a require error if borrower called ERC20.approve function before calling it.\n        @param principalAmount amount of tokens towards the principal.\n        @param interestAmount amount of tokens towards the interest.\n        @param borrower address that is repaying the loan.\n     */\n    function repay(\n        uint256 principalAmount,\n        uint256 interestAmount,\n        address borrower\n    ) external;\n\n    /**\n        @notice Once the loan is created, it transfers the amount of tokens to the borrower.\n        @param amount of tokens to transfer.\n        @param borrower address which will receive the tokens.\n        @dev This function only can be invoked by the LoansInterface implementation.\n        @dev It throws a require error if current ERC20 balance isn't enough to transfer the tokens.\n     */\n    function createLoan(uint256 amount, address borrower) external;\n\n    /**\n        @notice It gets the lending token address.\n        @return the ERC20 lending token address.\n    */\n    function lendingToken() external view returns (ERC20Detailed);\n\n    /**\n        @notice It initializes the contract state variables.\n        @param aMarketRegistry the MarketRegistry contract.\n        @param aTToken the Teller token to link to the lending pool.\n        @param settingsAddress Settings contract address.\n        @dev It throws a require error if the contract is already initialized.\n     */\n    function initialize(\n        IMarketRegistry aMarketRegistry,\n        TToken aTToken,\n        address settingsAddress\n    ) external;\n\n    /**\n        @notice It gets the cToken address.\n        @return the cToken address.\n    */\n    function cToken() external view returns (address);\n\n    /**\n        @notice It gets the tToken address.\n        @return the tToken address.\n    */\n    function tToken() external view returns (TToken);\n\n    /**\n        @notice It calculates the market state values across all markets.\n        @return values that represent the global state across all markets.\n     */\n    function getMarketState() external view returns (\n        uint256 totalSupplied,\n        uint256 totalBorrowed,\n        uint256 totalRepaid\n    );\n\n    function getDebtRatioFor(uint256 loanAmount) external view returns (uint256);\n\n    /**\n        @notice This event is emitted when an user deposits tokens into the pool.\n        @param sender address.\n        @param amount of tokens.\n     */\n    event TokenDeposited(address indexed sender, uint256 amount, uint256 tTokenAmount);\n\n    /**\n        @notice This event is emitted when an user withdraws tokens from the pool.\n        @param sender address that withdrew the tokens.\n        @param amount of tokens.\n     */\n    event TokenWithdrawn(address indexed sender, uint256 amount, uint256 tTokenAmount);\n\n    /**\n        @notice This event is emitted when an borrower repaid a loan.\n        @param borrower address.\n        @param amount of tokens.\n     */\n    event TokenRepaid(address indexed borrower, uint256 amount);\n\n    /**\n        @notice This event is emitted when an lender withdraws interests.\n        @param lender address.\n        @param amount of tokens.\n     */\n    event InterestWithdrawn(address indexed lender, uint256 amount);\n\n    /**\n        @notice This event is emitted when the interest validator is updated.\n        @param sender account that sends the transaction.\n        @param oldInterestValidator the old validator address.\n        @param newInterestValidator the new validator address.\n     */\n    event InterestValidatorUpdated(\n        address indexed sender,\n        address indexed oldInterestValidator,\n        address indexed newInterestValidator\n    );\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol",
    "exportedSymbols": {
      "LendingPoolInterface": [
        11303
      ]
    },
    "id": 11304,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11196,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "id": 11197,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:45"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 11198,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 22834,
        "src": "68:90:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/IMarketRegistry.sol",
        "file": "./IMarketRegistry.sol",
        "id": 11199,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 11179,
        "src": "174:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
        "file": "../base/TToken.sol",
        "id": 11200,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 10123,
        "src": "220:28:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This interface defines the functions for a lending pool that holds all of the tokens that lenders transfer into the protocol.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 11303,
        "linearizedBaseContracts": [
          11303
        ],
        "name": "LendingPoolInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice It allows users to deposit tokens into the pool.\n@dev the user must call ERC20.approve function previously.\n@param amount of tokens to deposit in the pool.",
            "id": 11205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11202,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11205,
                  "src": "689:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "688:16:45"
            },
            "returnParameters": {
              "id": 11204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:45"
            },
            "scope": 11303,
            "src": "672:42:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows any tToken holder to burn their tToken tokens and withdraw their tokens.\n@param amount of tokens to withdraw.\n@dev It throws a require error if the contract hasn't enough tokens balance.\n@dev It throws a require error if the holder hasn't enough tToken balance.",
            "id": 11210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11207,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11210,
                  "src": "1066:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:16:45"
            },
            "returnParameters": {
              "id": 11209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1090:0:45"
            },
            "scope": 11303,
            "src": "1048:43:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a ERC20.approve call before calling it.\n@dev It throws a require error if borrower called ERC20.approve function before calling it.\n@param principalAmount amount of tokens towards the principal.\n@param interestAmount amount of tokens towards the interest.\n@param borrower address that is repaying the loan.",
            "id": 11219,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11212,
                  "name": "principalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1629:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11214,
                  "name": "interestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1662:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11216,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1694:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1619:97:45"
            },
            "returnParameters": {
              "id": 11218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1725:0:45"
            },
            "scope": 11303,
            "src": "1605:121:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Once the loan is created, it transfers the amount of tokens to the borrower.\n@param amount of tokens to transfer.\n@param borrower address which will receive the tokens.\n@dev This function only can be invoked by the LoansInterface implementation.\n@dev It throws a require error if current ERC20 balance isn't enough to transfer the tokens.",
            "id": 11226,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11221,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11226,
                  "src": "2155:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11223,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11226,
                  "src": "2171:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2154:34:45"
            },
            "returnParameters": {
              "id": 11225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2197:0:45"
            },
            "scope": 11303,
            "src": "2135:63:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the lending token address.\n@return the ERC20 lending token address.",
            "id": 11231,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lendingToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:2:45"
            },
            "returnParameters": {
              "id": 11230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11229,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11231,
                  "src": "2366:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Detailed_$22833",
                    "typeString": "contract ERC20Detailed"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11228,
                    "name": "ERC20Detailed",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22833,
                    "src": "2366:13:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Detailed_$22833",
                      "typeString": "contract ERC20Detailed"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2365:15:45"
            },
            "scope": 11303,
            "src": "2319:62:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It initializes the contract state variables.\n@param aMarketRegistry the MarketRegistry contract.\n@param aTToken the Teller token to link to the lending pool.\n@param settingsAddress Settings contract address.\n@dev It throws a require error if the contract is already initialized.",
            "id": 11240,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11233,
                  "name": "aMarketRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2759:31:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMarketRegistry_$11178",
                    "typeString": "contract IMarketRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11232,
                    "name": "IMarketRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11178,
                    "src": "2759:15:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMarketRegistry_$11178",
                      "typeString": "contract IMarketRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11235,
                  "name": "aTToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2800:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TToken_$10122",
                    "typeString": "contract TToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11234,
                    "name": "TToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10122,
                    "src": "2800:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TToken_$10122",
                      "typeString": "contract TToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11237,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2824:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:104:45"
            },
            "returnParameters": {
              "id": 11239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:0:45"
            },
            "scope": 11303,
            "src": "2730:133:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the cToken address.\n@return the cToken address.",
            "id": 11245,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2979:2:45"
            },
            "returnParameters": {
              "id": 11244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11245,
                  "src": "3005:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3004:9:45"
            },
            "scope": 11303,
            "src": "2964:50:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the tToken address.\n@return the tToken address.",
            "id": 11250,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3130:2:45"
            },
            "returnParameters": {
              "id": 11249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11250,
                  "src": "3156:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TToken_$10122",
                    "typeString": "contract TToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11247,
                    "name": "TToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10122,
                    "src": "3156:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TToken_$10122",
                      "typeString": "contract TToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3155:8:45"
            },
            "scope": 11303,
            "src": "3115:49:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It calculates the market state values across all markets.\n@return values that represent the global state across all markets.",
            "id": 11259,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3358:2:45"
            },
            "returnParameters": {
              "id": 11258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11253,
                  "name": "totalSupplied",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3393:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11255,
                  "name": "totalBorrowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3424:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11257,
                  "name": "totalRepaid",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3455:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3383:97:45"
            },
            "scope": 11303,
            "src": "3335:146:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 11266,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDebtRatioFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11261,
                  "name": "loanAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11266,
                  "src": "3512:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3511:20:45"
            },
            "returnParameters": {
              "id": 11265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11264,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11266,
                  "src": "3555:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3554:9:45"
            },
            "scope": 11303,
            "src": "3487:77:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user deposits tokens into the pool.\n@param sender address.\n@param amount of tokens.",
            "id": 11274,
            "name": "TokenDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11268,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3753:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11270,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3777:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11272,
                  "indexed": false,
                  "name": "tTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3793:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3752:62:45"
            },
            "src": "3732:83:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user withdraws tokens from the pool.\n@param sender address that withdrew the tokens.\n@param amount of tokens.",
            "id": 11282,
            "name": "TokenWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11276,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4030:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4030:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11278,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4054:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11280,
                  "indexed": false,
                  "name": "tTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4070:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4029:62:45"
            },
            "src": "4009:83:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an borrower repaid a loan.\n@param borrower address.\n@param amount of tokens.",
            "id": 11288,
            "name": "TokenRepaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11284,
                  "indexed": true,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "4268:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11286,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "4294:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4267:42:45"
            },
            "src": "4250:60:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an lender withdraws interests.\n@param lender address.\n@param amount of tokens.",
            "id": 11294,
            "name": "InterestWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11290,
                  "indexed": true,
                  "name": "lender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11294,
                  "src": "4494:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4494:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11292,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11294,
                  "src": "4518:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4493:40:45"
            },
            "src": "4470:64:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when the interest validator is updated.\n@param sender account that sends the transaction.\n@param oldInterestValidator the old validator address.\n@param newInterestValidator the new validator address.",
            "id": 11302,
            "name": "InterestValidatorUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11296,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4858:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11298,
                  "indexed": true,
                  "name": "oldInterestValidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4890:36:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4890:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11300,
                  "indexed": true,
                  "name": "newInterestValidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4936:36:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4936:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4848:130:45"
            },
            "src": "4818:161:45"
          }
        ],
        "scope": 11304,
        "src": "432:4549:45"
      }
    ],
    "src": "0:4982:45"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol",
    "exportedSymbols": {
      "LendingPoolInterface": [
        11303
      ]
    },
    "id": 11304,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11196,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "id": 11197,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:45"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 11198,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 22834,
        "src": "68:90:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/IMarketRegistry.sol",
        "file": "./IMarketRegistry.sol",
        "id": 11199,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 11179,
        "src": "174:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
        "file": "../base/TToken.sol",
        "id": 11200,
        "nodeType": "ImportDirective",
        "scope": 11304,
        "sourceUnit": 10123,
        "src": "220:28:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This interface defines the functions for a lending pool that holds all of the tokens that lenders transfer into the protocol.\n@author develop@teller.finance",
        "fullyImplemented": false,
        "id": 11303,
        "linearizedBaseContracts": [
          11303
        ],
        "name": "LendingPoolInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice It allows users to deposit tokens into the pool.\n@dev the user must call ERC20.approve function previously.\n@param amount of tokens to deposit in the pool.",
            "id": 11205,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11202,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11205,
                  "src": "689:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "688:16:45"
            },
            "returnParameters": {
              "id": 11204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:0:45"
            },
            "scope": 11303,
            "src": "672:42:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows any tToken holder to burn their tToken tokens and withdraw their tokens.\n@param amount of tokens to withdraw.\n@dev It throws a require error if the contract hasn't enough tokens balance.\n@dev It throws a require error if the holder hasn't enough tToken balance.",
            "id": 11210,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11207,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11210,
                  "src": "1066:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1065:16:45"
            },
            "returnParameters": {
              "id": 11209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1090:0:45"
            },
            "scope": 11303,
            "src": "1048:43:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a ERC20.approve call before calling it.\n@dev It throws a require error if borrower called ERC20.approve function before calling it.\n@param principalAmount amount of tokens towards the principal.\n@param interestAmount amount of tokens towards the interest.\n@param borrower address that is repaying the loan.",
            "id": 11219,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11212,
                  "name": "principalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1629:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11214,
                  "name": "interestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1662:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11216,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11219,
                  "src": "1694:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1619:97:45"
            },
            "returnParameters": {
              "id": 11218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1725:0:45"
            },
            "scope": 11303,
            "src": "1605:121:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Once the loan is created, it transfers the amount of tokens to the borrower.\n@param amount of tokens to transfer.\n@param borrower address which will receive the tokens.\n@dev This function only can be invoked by the LoansInterface implementation.\n@dev It throws a require error if current ERC20 balance isn't enough to transfer the tokens.",
            "id": 11226,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11221,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11226,
                  "src": "2155:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11223,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11226,
                  "src": "2171:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2154:34:45"
            },
            "returnParameters": {
              "id": 11225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2197:0:45"
            },
            "scope": 11303,
            "src": "2135:63:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the lending token address.\n@return the ERC20 lending token address.",
            "id": 11231,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lendingToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:2:45"
            },
            "returnParameters": {
              "id": 11230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11229,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11231,
                  "src": "2366:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Detailed_$22833",
                    "typeString": "contract ERC20Detailed"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11228,
                    "name": "ERC20Detailed",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22833,
                    "src": "2366:13:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Detailed_$22833",
                      "typeString": "contract ERC20Detailed"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2365:15:45"
            },
            "scope": 11303,
            "src": "2319:62:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It initializes the contract state variables.\n@param aMarketRegistry the MarketRegistry contract.\n@param aTToken the Teller token to link to the lending pool.\n@param settingsAddress Settings contract address.\n@dev It throws a require error if the contract is already initialized.",
            "id": 11240,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11233,
                  "name": "aMarketRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2759:31:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMarketRegistry_$11178",
                    "typeString": "contract IMarketRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11232,
                    "name": "IMarketRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11178,
                    "src": "2759:15:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMarketRegistry_$11178",
                      "typeString": "contract IMarketRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11235,
                  "name": "aTToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2800:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TToken_$10122",
                    "typeString": "contract TToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11234,
                    "name": "TToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10122,
                    "src": "2800:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TToken_$10122",
                      "typeString": "contract TToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11237,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 11240,
                  "src": "2824:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:104:45"
            },
            "returnParameters": {
              "id": 11239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:0:45"
            },
            "scope": 11303,
            "src": "2730:133:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the cToken address.\n@return the cToken address.",
            "id": 11245,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2979:2:45"
            },
            "returnParameters": {
              "id": 11244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11245,
                  "src": "3005:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3004:9:45"
            },
            "scope": 11303,
            "src": "2964:50:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It gets the tToken address.\n@return the tToken address.",
            "id": 11250,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3130:2:45"
            },
            "returnParameters": {
              "id": 11249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11248,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11250,
                  "src": "3156:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TToken_$10122",
                    "typeString": "contract TToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11247,
                    "name": "TToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10122,
                    "src": "3156:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TToken_$10122",
                      "typeString": "contract TToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3155:8:45"
            },
            "scope": 11303,
            "src": "3115:49:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It calculates the market state values across all markets.\n@return values that represent the global state across all markets.",
            "id": 11259,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3358:2:45"
            },
            "returnParameters": {
              "id": 11258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11253,
                  "name": "totalSupplied",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3393:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11255,
                  "name": "totalBorrowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3424:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11257,
                  "name": "totalRepaid",
                  "nodeType": "VariableDeclaration",
                  "scope": 11259,
                  "src": "3455:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3383:97:45"
            },
            "scope": 11303,
            "src": "3335:146:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 11266,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDebtRatioFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11261,
                  "name": "loanAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11266,
                  "src": "3512:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3511:20:45"
            },
            "returnParameters": {
              "id": 11265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11264,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11266,
                  "src": "3555:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3554:9:45"
            },
            "scope": 11303,
            "src": "3487:77:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user deposits tokens into the pool.\n@param sender address.\n@param amount of tokens.",
            "id": 11274,
            "name": "TokenDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11268,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3753:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11270,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3777:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11272,
                  "indexed": false,
                  "name": "tTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11274,
                  "src": "3793:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3752:62:45"
            },
            "src": "3732:83:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user withdraws tokens from the pool.\n@param sender address that withdrew the tokens.\n@param amount of tokens.",
            "id": 11282,
            "name": "TokenWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11276,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4030:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4030:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11278,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4054:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11280,
                  "indexed": false,
                  "name": "tTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "4070:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4029:62:45"
            },
            "src": "4009:83:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an borrower repaid a loan.\n@param borrower address.\n@param amount of tokens.",
            "id": 11288,
            "name": "TokenRepaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11284,
                  "indexed": true,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "4268:24:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11286,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "4294:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4267:42:45"
            },
            "src": "4250:60:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an lender withdraws interests.\n@param lender address.\n@param amount of tokens.",
            "id": 11294,
            "name": "InterestWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11290,
                  "indexed": true,
                  "name": "lender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11294,
                  "src": "4494:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4494:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11292,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11294,
                  "src": "4518:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4518:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4493:40:45"
            },
            "src": "4470:64:45"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when the interest validator is updated.\n@param sender account that sends the transaction.\n@param oldInterestValidator the old validator address.\n@param newInterestValidator the new validator address.",
            "id": 11302,
            "name": "InterestValidatorUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11296,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4858:22:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11298,
                  "indexed": true,
                  "name": "oldInterestValidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4890:36:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4890:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11300,
                  "indexed": true,
                  "name": "newInterestValidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 11302,
                  "src": "4936:36:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4936:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4848:130:45"
            },
            "src": "4818:161:45"
          }
        ],
        "scope": 11304,
        "src": "432:4549:45"
      }
    ],
    "src": "0:4982:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-01-20T01:04:06.976Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "cToken()": {
        "return": "the cToken address."
      },
      "createLoan(uint256,address)": {
        "details": "This function only can be invoked by the LoansInterface implementation.It throws a require error if current ERC20 balance isn't enough to transfer the tokens.",
        "params": {
          "amount": "of tokens to transfer.",
          "borrower": "address which will receive the tokens."
        }
      },
      "deposit(uint256)": {
        "details": "the user must call ERC20.approve function previously.",
        "params": {
          "amount": "of tokens to deposit in the pool."
        }
      },
      "getMarketState()": {
        "return": "values that represent the global state across all markets."
      },
      "initialize(address,address,address)": {
        "details": "It throws a require error if the contract is already initialized.",
        "params": {
          "aMarketRegistry": "the MarketRegistry contract.",
          "aTToken": "the Teller token to link to the lending pool.",
          "settingsAddress": "Settings contract address."
        }
      },
      "lendingToken()": {
        "return": "the ERC20 lending token address."
      },
      "repay(uint256,uint256,address)": {
        "details": "This function can be called ONLY by the Loans contract.It requires a ERC20.approve call before calling it.It throws a require error if borrower called ERC20.approve function before calling it.",
        "params": {
          "borrower": "address that is repaying the loan.",
          "interestAmount": "amount of tokens towards the interest.",
          "principalAmount": "amount of tokens towards the principal."
        }
      },
      "tToken()": {
        "return": "the tToken address."
      },
      "withdraw(uint256)": {
        "details": "It throws a require error if the contract hasn't enough tokens balance.It throws a require error if the holder hasn't enough tToken balance.",
        "params": {
          "amount": "of tokens to withdraw."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "It gets the cToken address."
      },
      "createLoan(uint256,address)": {
        "notice": "Once the loan is created, it transfers the amount of tokens to the borrower."
      },
      "deposit(uint256)": {
        "notice": "It allows users to deposit tokens into the pool."
      },
      "getMarketState()": {
        "notice": "It calculates the market state values across all markets."
      },
      "initialize(address,address,address)": {
        "notice": "It initializes the contract state variables."
      },
      "lendingToken()": {
        "notice": "It gets the lending token address."
      },
      "repay(uint256,uint256,address)": {
        "notice": "It allows a borrower repaying their loan. "
      },
      "tToken()": {
        "notice": "It gets the tToken address."
      },
      "withdraw(uint256)": {
        "notice": "It allows any tToken holder to burn their tToken tokens and withdraw their tokens."
      }
    },
    "notice": "This interface defines the functions for a lending pool that holds all of the tokens that lenders transfer into the protocol."
  }
}