{
  "contractName": "TToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20Detailed",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "underlyingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlyingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract ERC20Detailed\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"account\":\"The account to burn tokens from\",\"amount\":\"The amount of tokens to burn\"},\"return\":\"true if successful\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(address,address,address)\":{\"params\":{\"lendingPoolAddress\":\"the address of the lending pool this token is linked to. It is only used to add it as a minter.\",\"settingsAddress\":\"the settings address.\",\"underlyingTokenAddress\":\"the token address this TToken is for.\"}},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Reduce account supply of specified token amount\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"}},\"notice\":\"This contract represents a wrapped token within the Teller protocol\"}},\"settings\":{\"compilationTarget\":{\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/TToken.sol\":\"TToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0xa6063f679f0bb7ace21a083a7784a3c676c3fad2f4428ef70b75cbd563520edd\",\"urls\":[\"bzz-raw://70e25936f772bd22a2fb1ef01e8ac6143c5c30ef336f8a501d3c8cb55da98c43\",\"dweb:/ipfs/QmQwfKwmrda4iPsbD6iLcq8UM2bNwgAGv21M8JSX5tQ6Da\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/TToken.sol\":{\"keccak256\":\"0x383aca1ee1f1431b8583243bfaa979b7993aeb463e31ca4c8fb03cdeba4d1a3b\",\"urls\":[\"bzz-raw://fc2269440f57e20546dbf5706ad0b9e6298494cacdf1541fdaa1827c0f7b47c0\",\"dweb:/ipfs/QmSqpLwb8pEp99zi4di83SNJzr4t47Wa7oJhGNdEUoMCHq\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/AssetSettingsInterface.sol\":{\"keccak256\":\"0x60079e5d9b1f2ef9cfd3c041a4b8f72009d209a010afad1613dbfc9a19ad3708\",\"urls\":[\"bzz-raw://626a36df5d72a7b3610265045a90bc10d0336932bc46272448ae14ced4b5e426\",\"dweb:/ipfs/QmTN8jX2VjENdEhxfYZrpvBPP7LMUgdzZhLUsDfXrGtg4x\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x65b252d2e93c0fe47ba456e93bd6a9a24db46028b7312631597a7d36c2fc56ef\",\"urls\":[\"bzz-raw://b94bcfe3673d458956bd83e347fee518abff7195212125a39edbbe7975ccbe70\",\"dweb:/ipfs/QmYeHCxNJ4GMchBL2RQ6NsVjbRtRCdkNq9ZHe3dJxyR4DW\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/IBaseUpgradeable.sol\":{\"keccak256\":\"0xede43efe3ee18011d12e627b72deefa11ed2495146c25de9614e9f665deccb50\",\"urls\":[\"bzz-raw://ee2b24a4bb55c300a7a33a85f657c57c646f3f495ec6ad95b25552f0b5c761df\",\"dweb:/ipfs/QmQFfvTwQTRBqs2sX8q8sCZi5qBEEUP95LZR4phybzoqfB\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/IMarketRegistry.sol\":{\"keccak256\":\"0x0be46633fa37f4bdd154145b382f6dd1aa96dbda29d20fc5c44d915f88c57c55\",\"urls\":[\"bzz-raw://33db4899c5d6bb3a2734a3eb40679e985df2dc55a4c3dfbe294ea5b6f1e7da50\",\"dweb:/ipfs/QmWaZztMPN1mnoERvNmbrBf67uGSRYcR6dFGLT8Z3PTYag\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x9f968a4bf850ebfbf27a1d8da07a5af7a9d6db1283a3327622e2b9cec6986d48\",\"urls\":[\"bzz-raw://f54596a0f5c08d22d47e3628e7cb3a3ab9c1dbd3392bdc0fa3d498d01b0815f3\",\"dweb:/ipfs/QmTSdwf5S5VgD3cFWLajY9sK7MdhSmusu9VJFDcTDkznPb\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0x6c665438dd9ad5ca73efbfa1a3cb875ed96802d127d265dd6acf345956f810c5\",\"urls\":[\"bzz-raw://c54b1a47e3b3215f89679d264c7c8125c8c90b31e1592cb6c02fb676515bd687\",\"dweb:/ipfs/QmQdhZcRx6Z46N1LJ6Vv2YwLQiBm3B7yQx8TiA2LoaeetX\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0x98edbbb7c1c937f925a2dfce75d8b00260c9b6b77d78272f84fae3aab8ff0f9d\",\"urls\":[\"bzz-raw://4aa62cd03c860b9aa31fada3d68b0533ba3e5a8632fcd8088f6a2f756c08945f\",\"dweb:/ipfs/Qmb173SFRqFyv49yjenHPT5dFmHgCi7reLZh9f1RzqeGZy\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x09bd2761f299e58f03abba7ff908cb2d02ca5b3947cc4ab1be6b5598a41533ca\",\"urls\":[\"bzz-raw://712fe4975c46421f4d29a7a34ecc783fe3d2963bd4d1608be8c13ff143b2e6a1\",\"dweb:/ipfs/QmUqQPSTUaxULzPWh9aBGCPPRFFvCKnz2ThEKqxeGdnnmX\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0x35169d535f127d48189b8ee0db993d47a2beab6a2493135e05b3c5e4a1df8860\",\"urls\":[\"bzz-raw://6beb369cb6404da0919bb898831588cbf1d283279b95835e1a0fadf2b601e2ab\",\"dweb:/ipfs/QmcW33UPxKWdHbs9sUVqYkTpRcFzMkyy7UgVQXLui72VqC\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/providers/chainlink/IChainlinkAggregator.sol\":{\"keccak256\":\"0x162b32975e272aa1d86e9a36135d7da30a2dde633ac286e2ca54e6f734c083ea\",\"urls\":[\"bzz-raw://5df615261bc912ecf55210d58bff6122194b243236938d4f489e9053ab648c3e\",\"dweb:/ipfs/QmRokEM614TJUk1pDCo9uEd9CUSANHC73yx3RNZNmiNtDY\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0x3298d82a77b05c01c04d4759893e04128e3636ca94c548de1e774622cb0f1d89\",\"urls\":[\"bzz-raw://4a2d185d34a96269514a74d0f42d30ddc71020b90f3847c5a9bb31fbff87ec62\",\"dweb:/ipfs/QmQUSmaZzku7BDbEvEEtp2hmk8QtMZCHz457nNuKNW2FFv\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/AddressArrayLib.sol\":{\"keccak256\":\"0xe28b4cca4292c36b193d8596960510bda9e1789bffa9f5c57b28f323c2552b4f\",\"urls\":[\"bzz-raw://e25116dc3e5176a928e550fb34ffc1ecf710efc1c385a65b1989d55d0b63d427\",\"dweb:/ipfs/QmRcKvxZMTEWne9ZHNHviszigz1SxzWFsgtJGFifPEtECj\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0xb6311a4caaab2cc3f783d476a1432e436d12b4ea45be92809b1adbeafc4d31c1\",\"urls\":[\"bzz-raw://643716fbfdf17e6936c46ee04c0355c27b1c052bee89918e97cfa78b8eb81d68\",\"dweb:/ipfs/QmSXTEHePHXfhk38F2Y4JP4Rr9ichFiSuDCpTL5PJ1v5pC\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/CacheLib.sol\":{\"keccak256\":\"0xa43ff6d740577dfeae4972671c9a60cdf9607d6e81cadc585955debe1ca38dd7\",\"urls\":[\"bzz-raw://ad94cfc3259b2e18be2d6faefd109a306394f94ec85c181995a8a547a4555a9e\",\"dweb:/ipfs/QmYBPyNaRohQXZzM9uixEV1oBrQrhFTTi5HpWPS7udZNh6\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0x0fb35b6b314b9fc7f4b9ed0c10f0b2a71e67c34157209cda1ebfc6c174ad3813\",\"urls\":[\"bzz-raw://e7031377ba277b419377f7aa4588c5250583bd3812d8056f60bce059b4fbfd6c\",\"dweb:/ipfs/QmWCoGshJUK75gPbGSzhx5bVHJgKLqngSwLDA5sD5TgHwq\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0x45711c23615ebfcbc5e5140096cdda6f2155cefa961c71801456ac22302e88c9\",\"urls\":[\"bzz-raw://29b9546e58aef1416a28b387d1d4b14e351f9a34bb5fdf8c22d0bfcb1c74ccf5\",\"dweb:/ipfs/QmSh8TU8BWnJwk8MgaDUxGjKaA3Dsqef4ztQMrHcsuXzUh\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/NumbersLib.sol\":{\"keccak256\":\"0xaa858071cda31070104f3ad479213c5fa4d898568823c98b18de60cb1c097c21\",\"urls\":[\"bzz-raw://1d1c87d6a3022d35f30153b4398051756842395ab9d48f1caeb2b1f2ef16937d\",\"dweb:/ipfs/QmNPMUw2fQTyD2Xad4WqoGfndMWw1giUUUw3xcBTgGpY4b\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0x9848b264416dbafb5cca7ed93205956ccc1f0690dce1bc27a2dbfd8fa55fb13d\",\"urls\":[\"bzz-raw://85b5f94a3d3f627025e07901114c332e34e0e396caf409059461ab34e0fc1c45\",\"dweb:/ipfs/QmUqS1ZAzyRamvpjZNuaepqprnQFdWch7Ug6xXrgXDfz6v\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0a63860141bab4588a5cd4af606b9a27ddd29aa7554029cb8b89b703d444f28b\",\"urls\":[\"bzz-raw://26c98caa3604ff8fca7ad11716bdec73ffc17195a74dac4ef61c6e2373edecda\",\"dweb:/ipfs/QmcxyVdVmQfXWpc6MJXauquD8hT5XVVcVLCfUouHUrXf98\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0x20ab9e90a20d34b38bb199555819461f36fb5b17baa41a9810f50e4cf3872f27\",\"urls\":[\"bzz-raw://a4e88fa632a430a52d867fa38c0455d2583d4f4ffee04d68646c6da811375970\",\"dweb:/ipfs/QmR627guCZS3dsjcYyFBB2U4HcVdEq1kGKpkA5P5czK9b8\"]},\"/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x10f0ea3fa316f244d8cf397a42e9a8194399f8e6396836194ccc10a1616b59fd\",\"urls\":[\"bzz-raw://8e29019d71d09a8c65deb14705387af536f4472c5ae6e877ab0e634af5f0a99a\",\"dweb:/ipfs/Qmb5kpCYFpDyqog2zo8G3opYaJ68KNKBr8n3hRqe7ULAtY\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x64fa8b255860b1cf2661a2d87ca287c21479edf18673ca694a770b6498e2de39\",\"urls\":[\"bzz-raw://ee19cc8583ee342d285c32a74bdc6050ac3fda11530a20fddadc8b1e9cc8f9be\",\"dweb:/ipfs/QmYRwA8umXm2gBbeWDVXWA1ADVFJu2eVn1xofkCGJrkxkz\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xacc87fdd0c5891084d0a2d801bb968d864f6bebacad14767a399b5b0ad3511f3\",\"urls\":[\"bzz-raw://d7eab097c04947df94daf86e2a5f6f461774028ba9e85d30b91550c6a42954bc\",\"dweb:/ipfs/QmPmVqMzTqBWh5Dcfo1U7bmUMGDLCEZPqwmRVukyM8YxcB\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x636b9f52b4ef5795c35a189a94e95a8f909ed1f7ef799e0218b71d97b3a780a0\",\"urls\":[\"bzz-raw://5c4813bfde66e6d6790eab4b44cf99b5eefe675f9726af454d8885c5c9959db4\",\"dweb:/ipfs/QmT83dCUn1yJFN9ftoJ9RWmJfsYosNyktuQkjRRfDWGLzp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052611d23806100136000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063983b2d56116100b8578063a9059cbb1161007c578063a9059cbb146104da578063aa271e1a14610506578063c0c53b8b1461052c578063c4d66de814610564578063dd62ed3e1461058a578063e06174e4146105b857610142565b8063983b2d561461044c57806398650275146104725780639dc29fac1461047a578063a457c2d7146104a6578063a59a9973146104d257610142565b8063313ce5671161010a578063313ce5671461038457806339509351146103a257806340c10f19146103ce5780636f307dc3146103fa57806370a082311461041e57806395d89b411461044457610142565b806306fdde0314610147578063095ea7b3146101c45780631624f6c61461020457806318160ddd1461033457806323b872dd1461034e575b600080fd5b61014f6105c0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610657565b604080519115158252519081900360200190f35b6103326004803603606081101561021a57600080fd5b810190602081018135600160201b81111561023457600080fd5b82018360208201111561024657600080fd5b803590602001918460018302840111600160201b8311171561026757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111600160201b831117156102ec57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106749050565b005b61033c610750565b60408051918252519081900360200190f35b6101f06004803603606081101561036457600080fd5b506001600160a01b03813581169160208101359091169060400135610756565b61038c6107e3565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156103b857600080fd5b506001600160a01b0381351690602001356107ec565b6101f0600480360360408110156103e457600080fd5b506001600160a01b038135169060200135610840565b610402610897565b604080516001600160a01b039092168252519081900360200190f35b61033c6004803603602081101561043457600080fd5b50356001600160a01b03166108a7565b61014f6108c2565b6103326004803603602081101561046257600080fd5b50356001600160a01b0316610923565b610332610975565b6101f06004803603604081101561049057600080fd5b506001600160a01b038135169060200135610987565b6101f0600480360360408110156104bc57600080fd5b506001600160a01b0381351690602001356109d9565b610402610a47565b6101f0600480360360408110156104f057600080fd5b506001600160a01b038135169060200135610a57565b6101f06004803603602081101561051c57600080fd5b50356001600160a01b0316610a6b565b6103326004803603606081101561054257600080fd5b506001600160a01b038135811691602081013582169160409091013516610a84565b6103326004803603602081101561057a57600080fd5b50356001600160a01b0316611051565b61033c600480360360408110156105a057600080fd5b506001600160a01b03813581169160200135166110fd565b610402611128565b60338054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b505050505090505b90565b600061066b610664611137565b848461113b565b50600192915050565b600054610100900460ff168061068d575061068d611227565b8061069b575060005460ff16155b6106d65760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff16158015610701576000805460ff1961ff0019909116610100171660011790555b8351610714906033906020870190611a71565b508251610728906034906020860190611a71565b506035805460ff191660ff8416179055801561074a576000805461ff00191690555b50505050565b606a5490565b600061076384848461122d565b6107d98461076f611137565b6107d485604051806060016040528060288152602001611be8602891396001600160a01b038a166000908152606960205260408120906107ad611137565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61138b16565b61113b565b5060019392505050565b60355460ff1690565b600061066b6107f9611137565b846107d4856069600061080a611137565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61142216565b600061085261084d611137565b610a6b565b61088d5760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61066b8383611483565b610102546001600160a01b031681565b6001600160a01b031660009081526068602052604090205490565b60348054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b61092e61084d611137565b6109695760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61097281611575565b50565b610985610980611137565b6115bd565b565b600061099461084d611137565b6109cf5760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61066b8383611605565b600061066b6109e6611137565b846107d485604051806060016040528060258152602001611cca6025913960696000610a10611137565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61138b16565b610103546001600160a01b031681565b600061066b610a64611137565b848461122d565b6000610a7e609d8363ffffffff61170116565b92915050565b600054610100900460ff1680610a9d5750610a9d611227565b80610aab575060005460ff16155b610ae65760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff16158015610b11576000805460ff1961ff0019909116610100171660011790555b610b23826001600160a01b0316611768565b610b74576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b610b86846001600160a01b0316611768565b610bd7576040805162461bcd60e51b815260206004820152601b60248201527f554e4445524c59494e475f4d5553545f42455f434f4e54524143540000000000604482015290519081900360640190fd5b610be9836001600160a01b0316611768565b610c30576040805162461bcd60e51b8152602060048201526013602482015272131417d35554d517d09157d0d3d395149050d5606a1b604482015290519081900360640190fd5b61010280546001600160a01b038087166001600160a01b031992831617909255610103805492861692909116919091179055610c6b826117a4565b61010254604080516306fdde0360e01b81529051611031926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610cb257600080fd5b505afa158015610cc6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610cef57600080fd5b8101908080516040519392919084600160201b821115610d0e57600080fd5b908301906020820185811115610d2357600080fd5b8251600160201b811182820188101715610d3c57600080fd5b82525081516020918201929091019080838360005b83811015610d69578181015183820152602001610d51565b50505050905090810190601f168015610d965780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806602a32b63632b9160cd1b81525060070182805190602001908083835b60208310610de15780518252601f199092019160209182019101610dc2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405261010260009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e6457600080fd5b505afa158015610e78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610ea157600080fd5b8101908080516040519392919084600160201b821115610ec057600080fd5b908301906020820185811115610ed557600080fd5b8251600160201b811182820188101715610eee57600080fd5b82525081516020918201929091019080838360005b83811015610f1b578181015183820152602001610f03565b50505050905090810190601f168015610f485780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601d60fa1b81525060010182805190602001908083835b60208310610f8d5780518252601f199092019160209182019101610f6e565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528085526101025463313ce56760e01b825294519296506001600160a01b03909416945063313ce567936004808201945091929190829003018186803b15801561100057600080fd5b505afa158015611014573d6000803e3d6000fd5b505050506040513d602081101561102a57600080fd5b5051610674565b61103a83611051565b801561074a576000805461ff001916905550505050565b600054610100900460ff168061106a575061106a611227565b80611078575060005460ff16155b6110b35760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff161580156110de576000805460ff1961ff0019909116610100171660011790555b6110e782611861565b80156110f9576000805461ff00191690555b5050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205490565b6000611132611904565b905090565b3390565b6001600160a01b0383166111805760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca66024913960400191505060405180910390fd5b6001600160a01b0382166111c55760405162461bcd60e51b8152600401808060200182810382526022815260200180611b4f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260696020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b0383166112725760405162461bcd60e51b8152600401808060200182810382526025815260200180611c816025913960400191505060405180910390fd5b6001600160a01b0382166112b75760405162461bcd60e51b8152600401808060200182810382526023815260200180611b0a6023913960400191505060405180910390fd5b6112fa81604051806060016040528060268152602001611b71602691396001600160a01b038616600090815260686020526040902054919063ffffffff61138b16565b6001600160a01b03808516600090815260686020526040808220939093559084168152205461132f908263ffffffff61142216565b6001600160a01b0380841660008181526068602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561141a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113df5781810151838201526020016113c7565b50505050905090810190601f16801561140c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561147c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166114de576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b606a546114f1908263ffffffff61142216565b606a556001600160a01b03821660009081526068602052604090205461151d908263ffffffff61142216565b6001600160a01b03831660008181526068602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b611586609d8263ffffffff61193916565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6115ce609d8263ffffffff6119ba16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b03821661164a5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c606021913960400191505060405180910390fd5b61168d81604051806060016040528060228152602001611b2d602291396001600160a01b038516600090815260686020526040902054919063ffffffff61138b16565b6001600160a01b038316600090815260686020526040902055606a546116b9908263ffffffff611a2116565b606a556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006001600160a01b0382166117485760405162461bcd60e51b8152600401808060200182810382526022815260200180611c106022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061179c57508115155b949350505050565b6117bd6117af611904565b6001600160a01b0316611a63565b156117c757610972565b6117d9816001600160a01b0316611768565b61182a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b6040805177426173655570677261646561626c652e73657474696e677360401b815290519081900360180190206000190181905550565b600054610100900460ff168061187a575061187a611227565b80611888575060005460ff16155b6118c35760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff161580156118ee576000805460ff1961ff0019909116610100171660011790555b6118f782610a6b565b6110e7576110e782611575565b6040805177426173655570677261646561626c652e73657474696e677360401b81529051908190036018019020600019015490565b6119438282611701565b15611995576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6119c48282611701565b6119ff5760405162461bcd60e51b8152600401808060200182810382526021815260200180611bc76021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600061147c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138b565b6001600160a01b0316151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ab257805160ff1916838001178555611adf565b82800160010185558215611adf579182015b82811115611adf578251825591602001919060010190611ac4565b50611aeb929150611aef565b5090565b61065491905b80821115611aeb5760008155600101611af556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208d6062c63b42b4ade4f9656da933b990e8d3d221b0d86313af4750169d0704d064736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c8063983b2d56116100b8578063a9059cbb1161007c578063a9059cbb146104da578063aa271e1a14610506578063c0c53b8b1461052c578063c4d66de814610564578063dd62ed3e1461058a578063e06174e4146105b857610142565b8063983b2d561461044c57806398650275146104725780639dc29fac1461047a578063a457c2d7146104a6578063a59a9973146104d257610142565b8063313ce5671161010a578063313ce5671461038457806339509351146103a257806340c10f19146103ce5780636f307dc3146103fa57806370a082311461041e57806395d89b411461044457610142565b806306fdde0314610147578063095ea7b3146101c45780631624f6c61461020457806318160ddd1461033457806323b872dd1461034e575b600080fd5b61014f6105c0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610657565b604080519115158252519081900360200190f35b6103326004803603606081101561021a57600080fd5b810190602081018135600160201b81111561023457600080fd5b82018360208201111561024657600080fd5b803590602001918460018302840111600160201b8311171561026757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460018302840111600160201b831117156102ec57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506106749050565b005b61033c610750565b60408051918252519081900360200190f35b6101f06004803603606081101561036457600080fd5b506001600160a01b03813581169160208101359091169060400135610756565b61038c6107e3565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156103b857600080fd5b506001600160a01b0381351690602001356107ec565b6101f0600480360360408110156103e457600080fd5b506001600160a01b038135169060200135610840565b610402610897565b604080516001600160a01b039092168252519081900360200190f35b61033c6004803603602081101561043457600080fd5b50356001600160a01b03166108a7565b61014f6108c2565b6103326004803603602081101561046257600080fd5b50356001600160a01b0316610923565b610332610975565b6101f06004803603604081101561049057600080fd5b506001600160a01b038135169060200135610987565b6101f0600480360360408110156104bc57600080fd5b506001600160a01b0381351690602001356109d9565b610402610a47565b6101f0600480360360408110156104f057600080fd5b506001600160a01b038135169060200135610a57565b6101f06004803603602081101561051c57600080fd5b50356001600160a01b0316610a6b565b6103326004803603606081101561054257600080fd5b506001600160a01b038135811691602081013582169160409091013516610a84565b6103326004803603602081101561057a57600080fd5b50356001600160a01b0316611051565b61033c600480360360408110156105a057600080fd5b506001600160a01b03813581169160200135166110fd565b610402611128565b60338054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b505050505090505b90565b600061066b610664611137565b848461113b565b50600192915050565b600054610100900460ff168061068d575061068d611227565b8061069b575060005460ff16155b6106d65760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff16158015610701576000805460ff1961ff0019909116610100171660011790555b8351610714906033906020870190611a71565b508251610728906034906020860190611a71565b506035805460ff191660ff8416179055801561074a576000805461ff00191690555b50505050565b606a5490565b600061076384848461122d565b6107d98461076f611137565b6107d485604051806060016040528060288152602001611be8602891396001600160a01b038a166000908152606960205260408120906107ad611137565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61138b16565b61113b565b5060019392505050565b60355460ff1690565b600061066b6107f9611137565b846107d4856069600061080a611137565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61142216565b600061085261084d611137565b610a6b565b61088d5760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61066b8383611483565b610102546001600160a01b031681565b6001600160a01b031660009081526068602052604090205490565b60348054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b61092e61084d611137565b6109695760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61097281611575565b50565b610985610980611137565b6115bd565b565b600061099461084d611137565b6109cf5760405162461bcd60e51b8152600401808060200182810382526030815260200180611b976030913960400191505060405180910390fd5b61066b8383611605565b600061066b6109e6611137565b846107d485604051806060016040528060258152602001611cca6025913960696000610a10611137565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61138b16565b610103546001600160a01b031681565b600061066b610a64611137565b848461122d565b6000610a7e609d8363ffffffff61170116565b92915050565b600054610100900460ff1680610a9d5750610a9d611227565b80610aab575060005460ff16155b610ae65760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff16158015610b11576000805460ff1961ff0019909116610100171660011790555b610b23826001600160a01b0316611768565b610b74576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b610b86846001600160a01b0316611768565b610bd7576040805162461bcd60e51b815260206004820152601b60248201527f554e4445524c59494e475f4d5553545f42455f434f4e54524143540000000000604482015290519081900360640190fd5b610be9836001600160a01b0316611768565b610c30576040805162461bcd60e51b8152602060048201526013602482015272131417d35554d517d09157d0d3d395149050d5606a1b604482015290519081900360640190fd5b61010280546001600160a01b038087166001600160a01b031992831617909255610103805492861692909116919091179055610c6b826117a4565b61010254604080516306fdde0360e01b81529051611031926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610cb257600080fd5b505afa158015610cc6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610cef57600080fd5b8101908080516040519392919084600160201b821115610d0e57600080fd5b908301906020820185811115610d2357600080fd5b8251600160201b811182820188101715610d3c57600080fd5b82525081516020918201929091019080838360005b83811015610d69578181015183820152602001610d51565b50505050905090810190601f168015610d965780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806602a32b63632b9160cd1b81525060070182805190602001908083835b60208310610de15780518252601f199092019160209182019101610dc2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405261010260009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e6457600080fd5b505afa158015610e78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610ea157600080fd5b8101908080516040519392919084600160201b821115610ec057600080fd5b908301906020820185811115610ed557600080fd5b8251600160201b811182820188101715610eee57600080fd5b82525081516020918201929091019080838360005b83811015610f1b578181015183820152602001610f03565b50505050905090810190601f168015610f485780820380516001836020036101000a031916815260200191505b506040525050506040516020018080601d60fa1b81525060010182805190602001908083835b60208310610f8d5780518252601f199092019160209182019101610f6e565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528085526101025463313ce56760e01b825294519296506001600160a01b03909416945063313ce567936004808201945091929190829003018186803b15801561100057600080fd5b505afa158015611014573d6000803e3d6000fd5b505050506040513d602081101561102a57600080fd5b5051610674565b61103a83611051565b801561074a576000805461ff001916905550505050565b600054610100900460ff168061106a575061106a611227565b80611078575060005460ff16155b6110b35760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff161580156110de576000805460ff1961ff0019909116610100171660011790555b6110e782611861565b80156110f9576000805461ff00191690555b5050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205490565b6000611132611904565b905090565b3390565b6001600160a01b0383166111805760405162461bcd60e51b8152600401808060200182810382526024815260200180611ca66024913960400191505060405180910390fd5b6001600160a01b0382166111c55760405162461bcd60e51b8152600401808060200182810382526022815260200180611b4f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260696020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b0383166112725760405162461bcd60e51b8152600401808060200182810382526025815260200180611c816025913960400191505060405180910390fd5b6001600160a01b0382166112b75760405162461bcd60e51b8152600401808060200182810382526023815260200180611b0a6023913960400191505060405180910390fd5b6112fa81604051806060016040528060268152602001611b71602691396001600160a01b038616600090815260686020526040902054919063ffffffff61138b16565b6001600160a01b03808516600090815260686020526040808220939093559084168152205461132f908263ffffffff61142216565b6001600160a01b0380841660008181526068602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561141a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113df5781810151838201526020016113c7565b50505050905090810190601f16801561140c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561147c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166114de576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b606a546114f1908263ffffffff61142216565b606a556001600160a01b03821660009081526068602052604090205461151d908263ffffffff61142216565b6001600160a01b03831660008181526068602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b611586609d8263ffffffff61193916565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6115ce609d8263ffffffff6119ba16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b03821661164a5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c606021913960400191505060405180910390fd5b61168d81604051806060016040528060228152602001611b2d602291396001600160a01b038516600090815260686020526040902054919063ffffffff61138b16565b6001600160a01b038316600090815260686020526040902055606a546116b9908263ffffffff611a2116565b606a556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006001600160a01b0382166117485760405162461bcd60e51b8152600401808060200182810382526022815260200180611c106022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061179c57508115155b949350505050565b6117bd6117af611904565b6001600160a01b0316611a63565b156117c757610972565b6117d9816001600160a01b0316611768565b61182a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b6040805177426173655570677261646561626c652e73657474696e677360401b815290519081900360180190206000190181905550565b600054610100900460ff168061187a575061187a611227565b80611888575060005460ff16155b6118c35760405162461bcd60e51b815260040180806020018281038252602e815260200180611c32602e913960400191505060405180910390fd5b600054610100900460ff161580156118ee576000805460ff1961ff0019909116610100171660011790555b6118f782610a6b565b6110e7576110e782611575565b6040805177426173655570677261646561626c652e73657474696e677360401b81529051908190036018019020600019015490565b6119438282611701565b15611995576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6119c48282611701565b6119ff5760405162461bcd60e51b8152600401808060200182810382526021815260200180611bc76021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600061147c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061138b565b6001600160a01b0316151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ab257805160ff1916838001178555611adf565b82800160010185558215611adf579182015b82811115611adf578251825591602001919060010190611ac4565b50611aeb929150611aef565b5090565b61065491905b80821115611aeb5760008155600101611af556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208d6062c63b42b4ade4f9656da933b990e8d3d221b0d86313af4750169d0704d064736f6c63430005110032",
  "sourceMap": "576:1899:31:-;;;;;;;;;",
  "deployedSourceMap": "576:1899:31:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:1899:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:125;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:127;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:127;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:127;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:127;;;;;;;;-1:-1:-1;492:182:127;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:127;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:127;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:127;;-1:-1:-1;;;492:182:127;;;;;-1:-1:-1;492:182:127;;-1:-1:-1;492:182:127:i;:::-;;1636:89:125;;;:::i;:::-;;;;;;;;;;;;;;;;3184:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:125;;;;;;;;;;;;;;;;;:::i;1567:81:127:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:125;;;;;;;;:::i;685:140:128:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:128;;;;;;;;:::i;802:31:31:-;;;:::i;:::-;;;;-1:-1:-1;;;;;802:31:31;;;;;;;;;;;;;;1783:108:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:125;-1:-1:-1;;;;;1783:108:125;;:::i;933:85:127:-;;;:::i;756:90:118:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:118;-1:-1:-1;;;;;756:90:118;;:::i;852:77::-;;;:::i;1208:140:31:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1208:140:31;;;;;;;;:::i;4573:258:125:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:125;;;;;;;;:::i;917:39:31:-;;;:::i;2094:155:125:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2094:155:125;;;;;;;;:::i;643:107:118:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:118;-1:-1:-1;;;;;643:107:118;;:::i;1626:847:31:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1626:847:31;;;;;;;;;;;;;;;;;;;:::i;448:101:128:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:128;-1:-1:-1;;;;;448:101:128;;:::i;2307:132:125:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:125;;;;;;;;;;:::i;1352:94:15:-;;;:::i;739:81:127:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:125:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:125;2577:149;;;;:::o;492:182:127:-;1024:12:134;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:127;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:127;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:127;:20;;-1:-1:-1;;647:20:127;;;;;;;1264:55:134;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:134;;;1264:55;492:182:127;;;;:::o;1636:89:125:-;1706:12;;1636:89;:::o;3184:300::-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:125;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:125;;;;;;;;;;;;-1:-1:-1;3366:33:125;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:125;3184:300;;;;;:::o;1567:81:127:-;1632:9;;;;1567:81;:::o;3879:207:125:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:125;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:125;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:128:-;759:4;544:22:118;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:128;781:7;790:6;775:5;:22::i;802:31:31:-;;;-1:-1:-1;;;;;802:31:31;;:::o;1783:108:125:-;-1:-1:-1;;;;;1866:18:125;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;933:85:127:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:118;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1208:140:31:-;1282:4;544:22:118;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:22:31;1304:7;1313:6;1298:5;:22::i;4573:258:125:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:125;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:125;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;917:39:31:-;;;-1:-1:-1;;;;;917:39:31;;:::o;2094:155:125:-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;643:107:118:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:118:o;1626:847:31:-;1024:12:134;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;1818:28:31;:15;-1:-1:-1;;;;;1818:26:31;;:28::i;:::-;1810:68;;;;;-1:-1:-1;;;1810:68:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:35;:22;-1:-1:-1;;;;;1896:33:31;;:35::i;:::-;1888:75;;;;;-1:-1:-1;;;1888:75:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:31;:18;-1:-1:-1;;;;;1981:29:31;;:31::i;:::-;1973:63;;;;;-1:-1:-1;;;1973:63:31;;;;;;;;;;;;-1:-1:-1;;;1973:63:31;;;;;;;;;;;;;;;2047:10;:50;;-1:-1:-1;;;;;2047:50:31;;;-1:-1:-1;;;;;;2047:50:31;;;;;;;2107:11;:54;;;;;;;;;;;;;;;2171:29;2184:15;2171:12;:29::i;:::-;2284:10;;:17;;;-1:-1:-1;;;2284:17:31;;;;2211:201;;-1:-1:-1;;;;;2284:10:31;;:15;;:17;;;;;:10;;:17;;;;;;;:10;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;2284:17:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2284:17:31;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2284:17:31;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2284:17:31;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2284:17:31;;420:4:-1;411:14;;;;2284:17:31;;;;;411:14:-1;2284:17:31;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2284:17:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:46;;;;;;-1:-1:-1;;;2256:46:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2256:46:31;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2256:46:31;;;2346:10;;;;;;;;;-1:-1:-1;;;;;2346:10:31;-1:-1:-1;;;;;2346:17:31;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2346:19:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2346:19:31;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2346:19:31;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2346:19:31;;;;;;;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2346:19:31;;420:4:-1;411:14;;;;2346:19:31;;;;;411:14:-1;2346:19:31;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2346:19:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:42;;;;;;-1:-1:-1;;;2324:42:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2324:42:31;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;2324:42:31;;;2381:10;;-1:-1:-1;;;2381:21:31;;;;2324:42;;-1:-1:-1;;;;;;2381:10:31;;;;-1:-1:-1;2381:19:31;;:21;;;;;-1:-1:-1;263:2;;2381:21:31;;;;;;;:10;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;2381:21:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2381:21:31;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2381:21:31;2211:24;:201::i;:::-;2422:44;2447:18;2422:24;:44::i;:::-;1268:14:134;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:134;;;1626:847:31;;;;:::o;448:101:128:-;1024:12:134;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:128;535:6;513:21;:29::i;:::-;1268:14:134;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:134;;;1264:55;448:101:128;;:::o;2307:132:125:-;-1:-1:-1;;;;;2405:18:125;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;1352:94:15:-;1395:17;1427:14;:12;:14::i;:::-;1420:21;;1352:94;:::o;867:96:116:-;946:10;867:96;:::o;7427:332:125:-;-1:-1:-1;;;;;7520:19:125;;7512:68;;;;-1:-1:-1;;;7512:68:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7598:21:125;;7590:68;;;;-1:-1:-1;;;7590:68:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7669:18:125;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7720:32;;;;;;;;;;;;;;;;;7427:332;;;:::o;1409:498:134:-;1820:4;1864:17;1895:7;1409:498;:::o;5305:464:125:-;-1:-1:-1;;;;;5402:20:125;;5394:70;;;;-1:-1:-1;;;5394:70:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:125;;5474:71;;;;-1:-1:-1;;;5474:71:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:125;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:125;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:125;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1732:187:123:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:123;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:123:o;6039:302:125:-;-1:-1:-1;;;;;6114:21:125;;6106:65;;;;;-1:-1:-1;;;6106:65:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:125;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:125;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;935:119:118:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:118;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:118;;;;;;;;1060:127;:::o;6660:342:125:-;-1:-1:-1;;;;;6735:21:125;;6727:67;;;;-1:-1:-1;;;6727:67:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6826:68;6849:6;6826:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6826:18:125;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6805:18:125;;;;;;:9;:18;;;;;:89;6919:12;;:24;;6936:6;6919:24;:16;:24;:::i;:::-;6904:12;:39;6958:37;;;;;;;;6984:1;;-1:-1:-1;;;;;6958:37:125;;;;;;;;;;;;6660:342;;:::o;779:200:117:-;851:4;-1:-1:-1;;;;;875:21:117;;867:68;;;;-1:-1:-1;;;867:68:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:117;:11;:20;;;;;;;;;;;;;;;779:200::o;686:610:131:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:131;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:131:o;2513:372:15:-;2656:36;2664:14;:12;:14::i;:::-;-1:-1:-1;;;;;2656:34:15;;:36::i;:::-;2652:63;;;2702:7;;2652:63;2728:28;:15;-1:-1:-1;;;;;2728:26:15;;:28::i;:::-;2720:68;;;;;-1:-1:-1;;;2720:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:37;;;-1:-1:-1;;;631:37:15;;;;;;;;;;;;-1:-1:-1;;623:50:15;2846:29;;;2838:43;:::o;361:137:118:-;1024:12:134;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:118;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;1965:241:15:-;631:37;;;-1:-1:-1;;;631:37:15;;;;;;;;;;;;-1:-1:-1;;623:50:15;2137:11;1965:241;:::o;260:175:117:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:117;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:117;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:117;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:117;;;510:180::o;1274:134:123:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;1288:108:100:-;-1:-1:-1;;;;;1368:21:100;;;;1288:108::o;576:1899:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;576:1899:31;;;-1:-1:-1;576:1899:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.17;\n\n// Utils\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\";\n\n// Interfaces\nimport \"../interfaces/SettingsInterface.sol\";\nimport \"../interfaces/LendingPoolInterface.sol\";\n\n// Contracts\nimport \"./BaseUpgradeable.sol\";\n\n/**\n * @notice This contract represents a wrapped token within the Teller protocol\n *\n * @author develop@teller.finance\n */\ncontract TToken is BaseUpgradeable, ERC20Detailed, ERC20Mintable {\n    using Address for address;\n\n    /** State Variables */\n\n    /**\n        @notice The token that is the underlying assets for this Teller token.\n     */\n    ERC20Detailed public underlying;\n\n    /**\n        @notice The LendingPool linked to this Teller Token.\n     */\n    LendingPoolInterface public lendingPool;\n\n\n    /* Public Functions */\n    /**\n     * @notice Reduce account supply of specified token amount\n     * @param account The account to burn tokens from\n     * @param amount The amount of tokens to burn\n     * @return true if successful\n     */\n    function burn(address account, uint256 amount) public onlyMinter returns (bool) {\n        _burn(account, amount);\n        return true;\n    }\n\n    /**\n     * @param underlyingTokenAddress the token address this TToken is for.\n     * @param lendingPoolAddress the address of the lending pool this token is linked to. It is only used to add it as a minter.\n     * @param settingsAddress the settings address.\n     */\n    function initialize(\n        address underlyingTokenAddress,\n        address lendingPoolAddress,\n        address settingsAddress\n    )\n        public\n        initializer\n    {\n        require(settingsAddress.isContract(), \"SETTINGS_MUST_BE_A_CONTRACT\");\n        require(underlyingTokenAddress.isContract(), \"UNDERLYING_MUST_BE_CONTRACT\");\n        require(lendingPoolAddress.isContract(), \"LP_MUST_BE_CONTRACT\");\n\n        underlying = ERC20Detailed(underlyingTokenAddress);\n        lendingPool = LendingPoolInterface(lendingPoolAddress);\n        _setSettings(settingsAddress);\n\n        ERC20Detailed.initialize(\n            string(abi.encodePacked(\"Teller \", underlying.name())),\n            string(abi.encodePacked(\"t\", underlying.symbol())),\n            underlying.decimals()\n        );\n        ERC20Mintable.initialize(lendingPoolAddress);\n    }\n}\n",
  "sourcePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/TToken.sol",
  "ast": {
    "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10451
      ]
    },
    "id": 10452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10331,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10332,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23204,
        "src": "34:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10333,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23253,
        "src": "125:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10334,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23617,
        "src": "216:78:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10335,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 12391,
        "src": "310:45:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol",
        "file": "../interfaces/LendingPoolInterface.sol",
        "id": 10336,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 11680,
        "src": "356:48:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 10337,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 4179,
        "src": "419:31:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10338,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4178,
              "src": "595:15:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$4178",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 10339,
            "nodeType": "InheritanceSpecifier",
            "src": "595:15:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10340,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23203,
              "src": "612:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10341,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10342,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23252,
              "src": "627:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$23252",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10343,
            "nodeType": "InheritanceSpecifier",
            "src": "627:13:31"
          }
        ],
        "contractDependencies": [
          4178,
          11468,
          21748,
          21952,
          23095,
          23203,
          23252,
          23321,
          23809
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10451,
        "linearizedBaseContracts": [
          10451,
          23252,
          21952,
          23095,
          23203,
          23321,
          21748,
          23809,
          4178,
          11468
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10346,
            "libraryName": {
              "contractScope": null,
              "id": 10344,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23616,
              "src": "653:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$23616",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "647:26:31",
            "typeName": {
              "id": 10345,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10348,
            "name": "underlying",
            "nodeType": "VariableDeclaration",
            "scope": 10451,
            "src": "802:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
              "typeString": "contract ERC20Detailed"
            },
            "typeName": {
              "contractScope": null,
              "id": 10347,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23203,
              "src": "802:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                "typeString": "contract ERC20Detailed"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10350,
            "name": "lendingPool",
            "nodeType": "VariableDeclaration",
            "scope": 10451,
            "src": "917:39:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
              "typeString": "contract LendingPoolInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10349,
              "name": "LendingPoolInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11679,
              "src": "917:20:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                "typeString": "contract LendingPoolInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10368,
              "nodeType": "Block",
              "src": "1288:60:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10362,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10352,
                        "src": "1304:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10363,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10354,
                        "src": "1313:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10361,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23019,
                      "src": "1298:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10365,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:22:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1337:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10360,
                  "id": 10367,
                  "nodeType": "Return",
                  "src": "1330:11:31"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10357,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10356,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21881,
                  "src": "1262:10:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1262:10:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1222:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10354,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1239:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1221:33:31"
            },
            "returnParameters": {
              "id": 10360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1282:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1281:6:31"
            },
            "scope": 10451,
            "src": "1208:140:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10449,
              "nodeType": "Block",
              "src": "1800:673:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10381,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10375,
                            "src": "1818:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1818:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1818:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                        "id": 10384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:29:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_A_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        }
                      ],
                      "id": 10380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1810:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:68:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10386,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:68:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10388,
                            "name": "underlyingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10371,
                            "src": "1896:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1896:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1896:35:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "554e4445524c59494e475f4d5553545f42455f434f4e5452414354",
                        "id": 10391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:29:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3494ba9a970e738c88879a8d53a4c68c88f5393b68959811671b0c8b05ef58e",
                          "typeString": "literal_string \"UNDERLYING_MUST_BE_CONTRACT\""
                        },
                        "value": "UNDERLYING_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3494ba9a970e738c88879a8d53a4c68c88f5393b68959811671b0c8b05ef58e",
                          "typeString": "literal_string \"UNDERLYING_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1888:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:75:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10393,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:75:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10395,
                            "name": "lendingPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10373,
                            "src": "1981:18:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1981:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1981:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4d5553545f42455f434f4e5452414354",
                        "id": 10398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2014:21:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07e7722f9d747140496d240a78cb795d7081ed6454c33445e99dd9ac322cd579",
                          "typeString": "literal_string \"LP_MUST_BE_CONTRACT\""
                        },
                        "value": "LP_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07e7722f9d747140496d240a78cb795d7081ed6454c33445e99dd9ac322cd579",
                          "typeString": "literal_string \"LP_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1973:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10400,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:63:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10401,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10348,
                      "src": "2047:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                        "typeString": "contract ERC20Detailed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10403,
                          "name": "underlyingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10371,
                          "src": "2074:22:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10402,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23203,
                        "src": "2060:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23203_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2060:37:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                        "typeString": "contract ERC20Detailed"
                      }
                    },
                    "src": "2047:50:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                      "typeString": "contract ERC20Detailed"
                    }
                  },
                  "id": 10406,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:50:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10407,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "2107:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                        "typeString": "contract LendingPoolInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10409,
                          "name": "lendingPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10373,
                          "src": "2142:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10408,
                        "name": "LendingPoolInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11679,
                        "src": "2121:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LendingPoolInterface_$11679_$",
                          "typeString": "type(contract LendingPoolInterface)"
                        }
                      },
                      "id": 10410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2121:40:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                        "typeString": "contract LendingPoolInterface"
                      }
                    },
                    "src": "2107:54:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                      "typeString": "contract LendingPoolInterface"
                    }
                  },
                  "id": 10412,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:54:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10414,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10375,
                        "src": "2184:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10413,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4158,
                      "src": "2171:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10416,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:29:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "54656c6c657220",
                                "id": 10423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2273:9:31",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_906843064d1af5c28a0bbc5b4bbe8c533b98c19566151abaefd8d9f5b8245b1b",
                                  "typeString": "literal_string \"Teller \""
                                },
                                "value": "Teller "
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10424,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10348,
                                    "src": "2284:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                                      "typeString": "contract ERC20Detailed"
                                    }
                                  },
                                  "id": 10425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23182,
                                  "src": "2284:15:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 10426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2284:17:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_906843064d1af5c28a0bbc5b4bbe8c533b98c19566151abaefd8d9f5b8245b1b",
                                  "typeString": "literal_string \"Teller \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10421,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23926,
                                "src": "2256:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2256:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2256:46:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2249:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 10428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:54:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "74",
                                "id": 10432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2341:3:31",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089",
                                  "typeString": "literal_string \"t\""
                                },
                                "value": "t"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10433,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10348,
                                    "src": "2346:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                                      "typeString": "contract ERC20Detailed"
                                    }
                                  },
                                  "id": 10434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23190,
                                  "src": "2346:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 10435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2346:19:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089",
                                  "typeString": "literal_string \"t\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10430,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23926,
                                "src": "2324:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2324:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2324:42:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2317:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 10437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2317:50:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10438,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10348,
                            "src": "2381:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                              "typeString": "contract ERC20Detailed"
                            }
                          },
                          "id": 10439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23198,
                          "src": "2381:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2381:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10417,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23203,
                        "src": "2211:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23203_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23174,
                      "src": "2211:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2211:201:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:201:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10446,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10373,
                        "src": "2447:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10443,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23252,
                        "src": "2422:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$23252_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23228,
                      "src": "2422:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10448,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:44:31"
                }
              ]
            },
            "documentation": "@param underlyingTokenAddress the token address this TToken is for.\n@param lendingPoolAddress the address of the lending pool this token is linked to. It is only used to add it as a minter.\n@param settingsAddress the settings address.",
            "id": 10450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10378,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10377,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23784,
                  "src": "1784:11:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1784:11:31"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10371,
                  "name": "underlyingTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1655:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10373,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1695:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10375,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1731:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:115:31"
            },
            "returnParameters": {
              "id": 10379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:31"
            },
            "scope": 10451,
            "src": "1626:847:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10452,
        "src": "576:1899:31"
      }
    ],
    "src": "0:2476:31"
  },
  "legacyAST": {
    "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10451
      ]
    },
    "id": 10452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10331,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10332,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23204,
        "src": "34:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10333,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23253,
        "src": "125:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10334,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 23617,
        "src": "216:78:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10335,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 12391,
        "src": "310:45:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol",
        "file": "../interfaces/LendingPoolInterface.sol",
        "id": 10336,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 11680,
        "src": "356:48:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeremig/Documents/Teller/dojo/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 10337,
        "nodeType": "ImportDirective",
        "scope": 10452,
        "sourceUnit": 4179,
        "src": "419:31:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10338,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4178,
              "src": "595:15:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$4178",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 10339,
            "nodeType": "InheritanceSpecifier",
            "src": "595:15:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10340,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23203,
              "src": "612:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10341,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10342,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23252,
              "src": "627:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$23252",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10343,
            "nodeType": "InheritanceSpecifier",
            "src": "627:13:31"
          }
        ],
        "contractDependencies": [
          4178,
          11468,
          21748,
          21952,
          23095,
          23203,
          23252,
          23321,
          23809
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10451,
        "linearizedBaseContracts": [
          10451,
          23252,
          21952,
          23095,
          23203,
          23321,
          21748,
          23809,
          4178,
          11468
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10346,
            "libraryName": {
              "contractScope": null,
              "id": 10344,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23616,
              "src": "653:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$23616",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "647:26:31",
            "typeName": {
              "id": 10345,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10348,
            "name": "underlying",
            "nodeType": "VariableDeclaration",
            "scope": 10451,
            "src": "802:31:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
              "typeString": "contract ERC20Detailed"
            },
            "typeName": {
              "contractScope": null,
              "id": 10347,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23203,
              "src": "802:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                "typeString": "contract ERC20Detailed"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10350,
            "name": "lendingPool",
            "nodeType": "VariableDeclaration",
            "scope": 10451,
            "src": "917:39:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
              "typeString": "contract LendingPoolInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10349,
              "name": "LendingPoolInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11679,
              "src": "917:20:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                "typeString": "contract LendingPoolInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10368,
              "nodeType": "Block",
              "src": "1288:60:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10362,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10352,
                        "src": "1304:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10363,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10354,
                        "src": "1313:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10361,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23019,
                      "src": "1298:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10365,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:22:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1337:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10360,
                  "id": 10367,
                  "nodeType": "Return",
                  "src": "1330:11:31"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10369,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10357,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10356,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21881,
                  "src": "1262:10:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1262:10:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10352,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1222:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10354,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1239:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1221:33:31"
            },
            "returnParameters": {
              "id": 10360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10369,
                  "src": "1282:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1281:6:31"
            },
            "scope": 10451,
            "src": "1208:140:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10449,
              "nodeType": "Block",
              "src": "1800:673:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10381,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10375,
                            "src": "1818:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1818:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1818:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f415f434f4e5452414354",
                        "id": 10384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:29:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_A_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452b316e5cb19b7acb0d2f0547619d5f4071b0df24a897a549ec7189b97d44a0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_A_CONTRACT\""
                        }
                      ],
                      "id": 10380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1810:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:68:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10386,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:68:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10388,
                            "name": "underlyingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10371,
                            "src": "1896:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1896:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1896:35:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "554e4445524c59494e475f4d5553545f42455f434f4e5452414354",
                        "id": 10391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:29:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3494ba9a970e738c88879a8d53a4c68c88f5393b68959811671b0c8b05ef58e",
                          "typeString": "literal_string \"UNDERLYING_MUST_BE_CONTRACT\""
                        },
                        "value": "UNDERLYING_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3494ba9a970e738c88879a8d53a4c68c88f5393b68959811671b0c8b05ef58e",
                          "typeString": "literal_string \"UNDERLYING_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1888:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:75:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10393,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:75:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10395,
                            "name": "lendingPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10373,
                            "src": "1981:18:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23568,
                          "src": "1981:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1981:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4d5553545f42455f434f4e5452414354",
                        "id": 10398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2014:21:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07e7722f9d747140496d240a78cb795d7081ed6454c33445e99dd9ac322cd579",
                          "typeString": "literal_string \"LP_MUST_BE_CONTRACT\""
                        },
                        "value": "LP_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07e7722f9d747140496d240a78cb795d7081ed6454c33445e99dd9ac322cd579",
                          "typeString": "literal_string \"LP_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23942,
                        23943
                      ],
                      "referencedDeclaration": 23943,
                      "src": "1973:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1973:63:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10400,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:63:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10401,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10348,
                      "src": "2047:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                        "typeString": "contract ERC20Detailed"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10403,
                          "name": "underlyingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10371,
                          "src": "2074:22:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10402,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23203,
                        "src": "2060:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23203_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2060:37:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                        "typeString": "contract ERC20Detailed"
                      }
                    },
                    "src": "2047:50:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                      "typeString": "contract ERC20Detailed"
                    }
                  },
                  "id": 10406,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:50:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10407,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "2107:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                        "typeString": "contract LendingPoolInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10409,
                          "name": "lendingPoolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10373,
                          "src": "2142:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10408,
                        "name": "LendingPoolInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11679,
                        "src": "2121:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LendingPoolInterface_$11679_$",
                          "typeString": "type(contract LendingPoolInterface)"
                        }
                      },
                      "id": 10410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2121:40:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                        "typeString": "contract LendingPoolInterface"
                      }
                    },
                    "src": "2107:54:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolInterface_$11679",
                      "typeString": "contract LendingPoolInterface"
                    }
                  },
                  "id": 10412,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:54:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10414,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10375,
                        "src": "2184:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10413,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4158,
                      "src": "2171:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10416,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:29:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "54656c6c657220",
                                "id": 10423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2273:9:31",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_906843064d1af5c28a0bbc5b4bbe8c533b98c19566151abaefd8d9f5b8245b1b",
                                  "typeString": "literal_string \"Teller \""
                                },
                                "value": "Teller "
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10424,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10348,
                                    "src": "2284:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                                      "typeString": "contract ERC20Detailed"
                                    }
                                  },
                                  "id": 10425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23182,
                                  "src": "2284:15:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 10426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2284:17:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_906843064d1af5c28a0bbc5b4bbe8c533b98c19566151abaefd8d9f5b8245b1b",
                                  "typeString": "literal_string \"Teller \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10421,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23926,
                                "src": "2256:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2256:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2256:46:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2249:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 10428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:54:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "74",
                                "id": 10432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2341:3:31",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089",
                                  "typeString": "literal_string \"t\""
                                },
                                "value": "t"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 10433,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10348,
                                    "src": "2346:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                                      "typeString": "contract ERC20Detailed"
                                    }
                                  },
                                  "id": 10434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "symbol",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23190,
                                  "src": "2346:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 10435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2346:19:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089",
                                  "typeString": "literal_string \"t\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 10430,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23926,
                                "src": "2324:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2324:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2324:42:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2317:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 10437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2317:50:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10438,
                            "name": "underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10348,
                            "src": "2381:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Detailed_$23203",
                              "typeString": "contract ERC20Detailed"
                            }
                          },
                          "id": 10439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23198,
                          "src": "2381:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2381:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10417,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23203,
                        "src": "2211:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23203_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23174,
                      "src": "2211:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2211:201:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:201:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10446,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10373,
                        "src": "2447:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10443,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23252,
                        "src": "2422:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$23252_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23228,
                      "src": "2422:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10448,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:44:31"
                }
              ]
            },
            "documentation": "@param underlyingTokenAddress the token address this TToken is for.\n@param lendingPoolAddress the address of the lending pool this token is linked to. It is only used to add it as a minter.\n@param settingsAddress the settings address.",
            "id": 10450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10378,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10377,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23784,
                  "src": "1784:11:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1784:11:31"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10371,
                  "name": "underlyingTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1655:30:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10373,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1695:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10375,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10450,
                  "src": "1731:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:115:31"
            },
            "returnParameters": {
              "id": 10379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:31"
            },
            "scope": 10451,
            "src": "1626:847:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10452,
        "src": "576:1899:31"
      }
    ],
    "src": "0:2476:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5d2a8E0D810f6291D8D962bd6A36dF9CF658d724",
      "transactionHash": "0x914fe1d5432e5786ad18f5bfd16cccfacf591b72a3b221c49d161425dcabf4d4"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-04-10T14:20:29.412Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "account": "The account to burn tokens from",
          "amount": "The amount of tokens to burn"
        },
        "return": "true if successful"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(address,address,address)": {
        "params": {
          "lendingPoolAddress": "the address of the lending pool this token is linked to. It is only used to add it as a minter.",
          "settingsAddress": "the settings address.",
          "underlyingTokenAddress": "the token address this TToken is for."
        }
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "mint(address,uint256)": {
        "details": "See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "Reduce account supply of specified token amount"
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      }
    },
    "notice": "This contract represents a wrapped token within the Teller protocol"
  }
}