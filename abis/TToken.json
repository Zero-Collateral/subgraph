{
  "contractName": "TToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"account\":\"The account to burn tokens from\",\"amount\":\"The amount of tokens to burn\"},\"return\":\"true if successful\"},\"constructor\":{\"params\":{\"decimals\":\"The amount of decimals for the token\",\"name\":\"The name of the token\",\"settingsAddress\":\"the setting address.\",\"symbol\":\"The symbol of the token\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Reduce account supply of specified token amount\"}},\"notice\":\"This contract represents a wrapped token within the Teller protocol\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol\":\"TToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol\":{\"keccak256\":\"0xaffbf121a696d5e110cb7ea76c7fd388d517a858d469eaae975b3c48303cdf22\",\"urls\":[\"bzz-raw://74fb07b9ae67ad526f7a4a223c056568e9f1c7d6b776cddd1590187a84457610\",\"dweb:/ipfs/QmYBgtop761FfeNPp4RQw14XHFpqxARaQwNvR7wDF1GUrs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/AssetSettingsInterface.sol\":{\"keccak256\":\"0x0b58fed714f80a7ae2be1c4f9baa1ec360ea446e7bef2a88c79071696406bbe3\",\"urls\":[\"bzz-raw://d348870fc8d6e738573eda914c89b87d8e0e28708ec14ceae0f7f26ed43a1d1a\",\"dweb:/ipfs/QmRTRkf6GKX8fnG2kM2cHY3D72LoJzkp7scvDP6xHAornj\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x65b252d2e93c0fe47ba456e93bd6a9a24db46028b7312631597a7d36c2fc56ef\",\"urls\":[\"bzz-raw://b94bcfe3673d458956bd83e347fee518abff7195212125a39edbbe7975ccbe70\",\"dweb:/ipfs/QmYeHCxNJ4GMchBL2RQ6NsVjbRtRCdkNq9ZHe3dJxyR4DW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/IERC20Detailed.sol\":{\"keccak256\":\"0xdc64751efc6e12ac73f98619e0832f0c3ef92fc01dd65ebc2b5ccae83ae8d281\",\"urls\":[\"bzz-raw://981dcf9f11cf576b6388cab9f779170ad087a89e0b8cf7f3ec319183a74c1dd6\",\"dweb:/ipfs/QmYt9TMoe2ZXyg1oakQ6a1QWzapmfNUdks1KZYKfifvFgv\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x9f968a4bf850ebfbf27a1d8da07a5af7a9d6db1283a3327622e2b9cec6986d48\",\"urls\":[\"bzz-raw://f54596a0f5c08d22d47e3628e7cb3a3ab9c1dbd3392bdc0fa3d498d01b0815f3\",\"dweb:/ipfs/QmTSdwf5S5VgD3cFWLajY9sK7MdhSmusu9VJFDcTDkznPb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x09bd2761f299e58f03abba7ff908cb2d02ca5b3947cc4ab1be6b5598a41533ca\",\"urls\":[\"bzz-raw://712fe4975c46421f4d29a7a34ecc783fe3d2963bd4d1608be8c13ff143b2e6a1\",\"dweb:/ipfs/QmUqQPSTUaxULzPWh9aBGCPPRFFvCKnz2ThEKqxeGdnnmX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0x0999a0b3ed69426b0a6737339068fda8e0125910ce7de3296c421e9c46b5a293\",\"urls\":[\"bzz-raw://4a286aa56944fd12acebcabd02afee0029985748374a7dd7213d1fcae94a37fd\",\"dweb:/ipfs/QmdniFe52aUp9NkquUJ75cuqqu9zBgmjXc1fWCWNUvyPDz\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol\":{\"keccak256\":\"0x65d179d2be67e2e417133fa3123a044ac799dc72f075dc9bce11672ea29f6b79\",\"urls\":[\"bzz-raw://73664a112d7c1f25d248c26b2fb3494885ac47c71c297e42dec633b47dc29201\",\"dweb:/ipfs/QmTo7RDs78XJ4ckze675hrPP6XpnYQhajB4qPXwRk8gJgf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkAggregator.sol\":{\"keccak256\":\"0x162b32975e272aa1d86e9a36135d7da30a2dde633ac286e2ca54e6f734c083ea\",\"urls\":[\"bzz-raw://5df615261bc912ecf55210d58bff6122194b243236938d4f489e9053ab648c3e\",\"dweb:/ipfs/QmRokEM614TJUk1pDCo9uEd9CUSANHC73yx3RNZNmiNtDY\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0x6eaebec35749d3da47c53aa15a356aa96fc72122b9c665555e337e988c7b10b5\",\"urls\":[\"bzz-raw://41dd59c4b566fa18c6052384147de1c9799ac83ff6e7bec63e73a8fbb9709ccd\",\"dweb:/ipfs/QmYKZXQHjDf9DzyDmwW4ugtw92R9S62k4apYv3xpGLXYfa\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0xb6311a4caaab2cc3f783d476a1432e436d12b4ea45be92809b1adbeafc4d31c1\",\"urls\":[\"bzz-raw://643716fbfdf17e6936c46ee04c0355c27b1c052bee89918e97cfa78b8eb81d68\",\"dweb:/ipfs/QmSXTEHePHXfhk38F2Y4JP4Rr9ichFiSuDCpTL5PJ1v5pC\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/CacheLib.sol\":{\"keccak256\":\"0xa43ff6d740577dfeae4972671c9a60cdf9607d6e81cadc585955debe1ca38dd7\",\"urls\":[\"bzz-raw://ad94cfc3259b2e18be2d6faefd109a306394f94ec85c181995a8a547a4555a9e\",\"dweb:/ipfs/QmYBPyNaRohQXZzM9uixEV1oBrQrhFTTi5HpWPS7udZNh6\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0x0fb35b6b314b9fc7f4b9ed0c10f0b2a71e67c34157209cda1ebfc6c174ad3813\",\"urls\":[\"bzz-raw://e7031377ba277b419377f7aa4588c5250583bd3812d8056f60bce059b4fbfd6c\",\"dweb:/ipfs/QmWCoGshJUK75gPbGSzhx5bVHJgKLqngSwLDA5sD5TgHwq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xf6ed40f1b21754a88ec1b31526dc542ebc53f1b93535ce3668df42523ce45d87\",\"urls\":[\"bzz-raw://3a18f2794b56baa2a939e60df513651e26634f3400c20fd9e0d09ce5c7bb46b6\",\"dweb:/ipfs/QmcJ3jccstvY5Hec7MTckbD3GEzZtykttugSEeSrdCgXQw\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersLib.sol\":{\"keccak256\":\"0xaa858071cda31070104f3ad479213c5fa4d898568823c98b18de60cb1c097c21\",\"urls\":[\"bzz-raw://1d1c87d6a3022d35f30153b4398051756842395ab9d48f1caeb2b1f2ef16937d\",\"dweb:/ipfs/QmNPMUw2fQTyD2Xad4WqoGfndMWw1giUUUw3xcBTgGpY4b\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0x9848b264416dbafb5cca7ed93205956ccc1f0690dce1bc27a2dbfd8fa55fb13d\",\"urls\":[\"bzz-raw://85b5f94a3d3f627025e07901114c332e34e0e396caf409059461ab34e0fc1c45\",\"dweb:/ipfs/QmUqS1ZAzyRamvpjZNuaepqprnQFdWch7Ug6xXrgXDfz6v\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0a63860141bab4588a5cd4af606b9a27ddd29aa7554029cb8b89b703d444f28b\",\"urls\":[\"bzz-raw://26c98caa3604ff8fca7ad11716bdec73ffc17195a74dac4ef61c6e2373edecda\",\"dweb:/ipfs/QmcxyVdVmQfXWpc6MJXauquD8hT5XVVcVLCfUouHUrXf98\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0x20ab9e90a20d34b38bb199555819461f36fb5b17baa41a9810f50e4cf3872f27\",\"urls\":[\"bzz-raw://a4e88fa632a430a52d867fa38c0455d2583d4f4ffee04d68646c6da811375970\",\"dweb:/ipfs/QmR627guCZS3dsjcYyFBB2U4HcVdEq1kGKpkA5P5czK9b8\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x7b120b4e46e83f36d8f82b56d637403dc5d12a4f3c314e031bb8ff47bf2638ed\",\"urls\":[\"bzz-raw://8f584207aca4d9fa909098ce107929d88ecb30b851c813cc3a9a80b02ed7aa21\",\"dweb:/ipfs/QmZdGPNX9cmZ7r1VVoKzZpXhFGJFtuBAAR94cWAh32pXDi\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x64fa8b255860b1cf2661a2d87ca287c21479edf18673ca694a770b6498e2de39\",\"urls\":[\"bzz-raw://ee19cc8583ee342d285c32a74bdc6050ac3fda11530a20fddadc8b1e9cc8f9be\",\"dweb:/ipfs/QmYRwA8umXm2gBbeWDVXWA1ADVFJu2eVn1xofkCGJrkxkz\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xacc87fdd0c5891084d0a2d801bb968d864f6bebacad14767a399b5b0ad3511f3\",\"urls\":[\"bzz-raw://d7eab097c04947df94daf86e2a5f6f461774028ba9e85d30b91550c6a42954bc\",\"dweb:/ipfs/QmPmVqMzTqBWh5Dcfo1U7bmUMGDLCEZPqwmRVukyM8YxcB\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x636b9f52b4ef5795c35a189a94e95a8f909ed1f7ef799e0218b71d97b3a780a0\",\"urls\":[\"bzz-raw://5c4813bfde66e6d6790eab4b44cf99b5eefe675f9726af454d8885c5c9959db4\",\"dweb:/ipfs/QmT83dCUn1yJFN9ftoJ9RWmJfsYosNyktuQkjRRfDWGLzp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806395d89b41116100a2578063a457c2d711610071578063a457c2d71461045a578063a9059cbb14610486578063aa271e1a146104b2578063c4d66de8146104d8578063dd62ed3e146104fe57610116565b806395d89b41146103f8578063983b2d561461040057806398650275146104265780639dc29fac1461042e57610116565b806323b872dd116100e957806323b872dd14610326578063313ce5671461035c578063395093511461037a57806340c10f19146103a657806370a08231146103d257610116565b806306fdde031461011b578063095ea7b3146101985780631624f6c6146101d857806318160ddd1461030c575b600080fd5b61012361052c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b0381351690602001356105c3565b604080519115158252519081900360200190f35b61030a600480360360608110156101ee57600080fd5b81019060208101813564010000000081111561020957600080fd5b82018360208201111561021b57600080fd5b8035906020019184600183028401116401000000008311171561023d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561029057600080fd5b8201836020820111156102a257600080fd5b803590602001918460018302840111640100000000831117156102c457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff1691506105e09050565b005b6103146106bc565b60408051918252519081900360200190f35b6101c46004803603606081101561033c57600080fd5b506001600160a01b038135811691602081013590911690604001356106c2565b61036461074f565b6040805160ff9092168252519081900360200190f35b6101c46004803603604081101561039057600080fd5b506001600160a01b038135169060200135610758565b6101c4600480360360408110156103bc57600080fd5b506001600160a01b0381351690602001356107ac565b610314600480360360208110156103e857600080fd5b50356001600160a01b0316610803565b61012361081e565b61030a6004803603602081101561041657600080fd5b50356001600160a01b031661087f565b61030a6108d1565b6101c46004803603604081101561044457600080fd5b506001600160a01b0381351690602001356108e3565b6101c46004803603604081101561047057600080fd5b506001600160a01b038135169060200135610935565b6101c46004803603604081101561049c57600080fd5b506001600160a01b0381351690602001356109a3565b6101c4600480360360208110156104c857600080fd5b50356001600160a01b03166109b7565b61030a600480360360208110156104ee57600080fd5b50356001600160a01b03166109d0565b6103146004803603604081101561051457600080fd5b506001600160a01b0381358116916020013516610a7c565b60338054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b505050505090505b90565b60006105d76105d0610aa7565b8484610aab565b50600192915050565b600054610100900460ff16806105f957506105f9610b97565b80610607575060005460ff16155b6106425760405162461bcd60e51b815260040180806020018281038252602e8152602001806114a2602e913960400191505060405180910390fd5b600054610100900460ff1615801561066d576000805460ff1961ff0019909116610100171660011790555b83516106809060339060208701906112a5565b5082516106949060349060208601906112a5565b506035805460ff191660ff841617905580156106b6576000805461ff00191690555b50505050565b606a5490565b60006106cf848484610b9d565b610745846106db610aa7565b61074085604051806060016040528060288152602001611458602891396001600160a01b038a16600090815260696020526040812090610719610aa7565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610cfb16565b610aab565b5060019392505050565b60355460ff1690565b60006105d7610765610aa7565b846107408560696000610776610aa7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610d9216565b60006107be6107b9610aa7565b6109b7565b6107f95760405162461bcd60e51b81526004018080602001828103825260308152602001806114076030913960400191505060405180910390fd5b6105d78383610df3565b6001600160a01b031660009081526068602052604090205490565b60348054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105b85780601f1061058d576101008083540402835291602001916105b8565b61088a6107b9610aa7565b6108c55760405162461bcd60e51b81526004018080602001828103825260308152602001806114076030913960400191505060405180910390fd5b6108ce81610ee5565b50565b6108e16108dc610aa7565b610f2d565b565b60006108f06107b9610aa7565b61092b5760405162461bcd60e51b81526004018080602001828103825260308152602001806114076030913960400191505060405180910390fd5b6105d78383610f75565b60006105d7610942610aa7565b846107408560405180606001604052806025815260200161153a602591396069600061096c610aa7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610cfb16565b60006105d76109b0610aa7565b8484610b9d565b60006109ca609d8363ffffffff61107116565b92915050565b600054610100900460ff16806109e957506109e9610b97565b806109f7575060005460ff16155b610a325760405162461bcd60e51b815260040180806020018281038252602e8152602001806114a2602e913960400191505060405180910390fd5b600054610100900460ff16158015610a5d576000805460ff1961ff0019909116610100171660011790555b610a66826110d8565b8015610a78576000805461ff00191690555b5050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205490565b3390565b6001600160a01b038316610af05760405162461bcd60e51b81526004018080602001828103825260248152602001806115166024913960400191505060405180910390fd5b6001600160a01b038216610b355760405162461bcd60e51b81526004018080602001828103825260228152602001806113bf6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260696020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b303b1590565b6001600160a01b038316610be25760405162461bcd60e51b81526004018080602001828103825260258152602001806114f16025913960400191505060405180910390fd5b6001600160a01b038216610c275760405162461bcd60e51b815260040180806020018281038252602381526020018061137a6023913960400191505060405180910390fd5b610c6a816040518060600160405280602681526020016113e1602691396001600160a01b038616600090815260686020526040902054919063ffffffff610cfb16565b6001600160a01b038085166000908152606860205260408082209390935590841681522054610c9f908263ffffffff610d9216565b6001600160a01b0380841660008181526068602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610d8a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d4f578181015183820152602001610d37565b50505050905090810190601f168015610d7c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610dec576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610e4e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b606a54610e61908263ffffffff610d9216565b606a556001600160a01b038216600090815260686020526040902054610e8d908263ffffffff610d9216565b6001600160a01b03831660008181526068602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610ef6609d8263ffffffff61117b16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610f3e609d8263ffffffff6111fc16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b038216610fba5760405162461bcd60e51b81526004018080602001828103825260218152602001806114d06021913960400191505060405180910390fd5b610ffd8160405180606001604052806022815260200161139d602291396001600160a01b038516600090815260686020526040902054919063ffffffff610cfb16565b6001600160a01b038316600090815260686020526040902055606a54611029908263ffffffff61126316565b606a556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006001600160a01b0382166110b85760405162461bcd60e51b81526004018080602001828103825260228152602001806114806022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600054610100900460ff16806110f157506110f1610b97565b806110ff575060005460ff16155b61113a5760405162461bcd60e51b815260040180806020018281038252602e8152602001806114a2602e913960400191505060405180910390fd5b600054610100900460ff16158015611165576000805460ff1961ff0019909116610100171660011790555b61116e826109b7565b610a6657610a6682610ee5565b6111858282611071565b156111d7576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6112068282611071565b6112415760405162461bcd60e51b81526004018080602001828103825260218152602001806114376021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6000610dec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610cfb565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106112e657805160ff1916838001178555611313565b82800160010185558215611313579182015b828111156113135782518255916020019190600101906112f8565b5061131f929150611323565b5090565b6105c091905b8082111561131f5760008155600101611329565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061137157508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820792039ff88dce20cb923fe635c1804018b71e4ab7872177d7814f94393c485d464736f6c63430005110032",
  "sourceMap": "501:1428:31:-;;;908:382;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:382:31;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;908:382:31;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;908:382:31;;420:4:-1;411:14;;;;908:382:31;;;;;411:14:-1;908:382:31;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;908:382:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;908:382:31;;420:4:-1;411:14;;;;908:382:31;;;;;411:14:-1;908:382:31;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;908:382:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;908:382:31;;;;;;;;-1:-1:-1;1066:28:31;;-1:-1:-1;;;;;;1066:26:31;;;;;;;;:28;;:::i;:::-;1058:66;;;;;-1:-1:-1;;;1058:66:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:8;:45;;-1:-1:-1;;;;;;1134:45:31;-1:-1:-1;;;;;1134:45:31;;;;;1189:48;1214:4;1220:6;1228:8;1189:24;;;;;;;:48;;:::i;:::-;1247:36;1272:10;1247:24;;;;;:36;;:::i;:::-;908:382;;;;501:1428;;686:610:135;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:135;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:135:o;492:182:131:-;1024:12:138;;;;;;;;:31;;-1:-1:-1;1040:15:138;-1:-1:-1;;;;;1040:13:138;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:131;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:131;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:131;:20;;-1:-1:-1;;647:20:131;;;;;;;1264:55:138;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:138;;;1264:55;492:182:131;;;;:::o;448:101:132:-;1024:12:138;;;;;;;;:31;;-1:-1:-1;1040:15:138;-1:-1:-1;;;;;1040:13:138;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:132;535:6;513:21;;;;;:29;;:::i;:::-;1268:14:138;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:138;;;1264:55;448:101:132;;:::o;1409:498:138:-;1820:4;1864:17;1895:7;1409:498;;:::o;361:137:122:-;1024:12:138;;;;;;;;:31;;-1:-1:-1;1040:15:138;-1:-1:-1;;;;;1040:13:138;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:122;440:6;-1:-1:-1;;;;;431:8:122;:16;:::i;:::-;426:66;;463:18;474:6;-1:-1:-1;;;;;463:10:122;:18;:::i;643:107::-;699:4;722:21;735:7;722:8;:12;;;;;;:21;;;;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:122:o;935:119::-;991:21;1004:7;991:8;:12;;;;;;:21;;;;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:122;;;;;;;;935:119;:::o;779:200:121:-;851:4;-1:-1:-1;;;;;875:21:121;;867:68;;;;-1:-1:-1;;;867:68:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:121;:11;:20;;;;;;;;;;;;;;;779:200::o;260:175::-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:121;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:121;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:121;424:4;401:27;;;260:175::o;501:1428:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:1428:31;;;-1:-1:-1;501:1428:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "501:1428:31:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;501:1428:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:131;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:129;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:131;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:131;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:131;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:131;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:131;;;;;;;;-1:-1:-1;492:182:131;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:131;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:131;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:131;;-1:-1:-1;;;492:182:131;;;;;-1:-1:-1;492:182:131;;-1:-1:-1;492:182:131:i;:::-;;1636:89:129;;;:::i;:::-;;;;;;;;;;;;;;;;3184:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:129;;;;;;;;;;;;;;;;;:::i;1567:81:131:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:129;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:129;;;;;;;;:::i;685:140:132:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:132;;;;;;;;:::i;1783:108:129:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:129;-1:-1:-1;;;;;1783:108:129;;:::i;933:85:131:-;;;:::i;756:90:122:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:122;-1:-1:-1;;;;;756:90:122;;:::i;852:77::-;;;:::i;1540:140:31:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1540:140:31;;;;;;;;:::i;4573:258:129:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:129;;;;;;;;:::i;2094:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2094:155:129;;;;;;;;:::i;643:107:122:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:122;-1:-1:-1;;;;;643:107:122;;:::i;448:101:132:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:132;-1:-1:-1;;;;;448:101:132;;:::i;2307:132:129:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:129;;;;;;;;;;:::i;739:81:131:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:129:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:129;2577:149;;;;:::o;492:182:131:-;1024:12:138;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:131;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:131;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:131;:20;;-1:-1:-1;;647:20:131;;;;;;;1264:55:138;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:138;;;1264:55;492:182:131;;;;:::o;1636:89:129:-;1706:12;;1636:89;:::o;3184:300::-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:129;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:129;;;;;;;;;;;;-1:-1:-1;3366:33:129;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:129;3184:300;;;;;:::o;1567:81:131:-;1632:9;;;;1567:81;:::o;3879:207:129:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:129;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:129;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:132:-;759:4;544:22:122;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:132;781:7;790:6;775:5;:22::i;1783:108:129:-;-1:-1:-1;;;;;1866:18:129;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;933:85:131:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:122;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1540:140:31:-;1614:4;544:22:122;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:22:31;1636:7;1645:6;1630:5;:22::i;4573:258:129:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:129;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:129;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2094:155::-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;643:107:122:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:122:o;448:101:132:-;1024:12:138;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:132;535:6;513:21;:29::i;:::-;1268:14:138;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:138;;;1264:55;448:101:132;;:::o;2307:132:129:-;-1:-1:-1;;;;;2405:18:129;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;867:96:120:-;946:10;867:96;:::o;7427:332:129:-;-1:-1:-1;;;;;7520:19:129;;7512:68;;;;-1:-1:-1;;;7512:68:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7598:21:129;;7590:68;;;;-1:-1:-1;;;7590:68:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7669:18:129;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7720:32;;;;;;;;;;;;;;;;;7427:332;;;:::o;1409:498:138:-;1820:4;1864:17;1895:7;1409:498;:::o;5305:464:129:-;-1:-1:-1;;;;;5402:20:129;;5394:70;;;;-1:-1:-1;;;5394:70:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:129;;5474:71;;;;-1:-1:-1;;;5474:71:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:129;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:129;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:129;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1732:187:127:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:127;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:127:o;6039:302:129:-;-1:-1:-1;;;;;6114:21:129;;6106:65;;;;;-1:-1:-1;;;6106:65:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:129;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:129;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;935:119:122:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:122;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:122;;;;;;;;1060:127;:::o;6660:342:129:-;-1:-1:-1;;;;;6735:21:129;;6727:67;;;;-1:-1:-1;;;6727:67:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6826:68;6849:6;6826:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6826:18:129;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6805:18:129;;;;;;:9;:18;;;;;:89;6919:12;;:24;;6936:6;6919:24;:16;:24;:::i;:::-;6904:12;:39;6958:37;;;;;;;;6984:1;;-1:-1:-1;;;;;6958:37:129;;;;;;;;;;;;6660:342;;:::o;779:200:121:-;851:4;-1:-1:-1;;;;;875:21:121;;867:68;;;;-1:-1:-1;;;867:68:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:121;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:122:-;1024:12:138;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:138;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:138;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:122;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;260:175:121:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:121;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:121;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:121;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:121;;;510:180::o;1274:134:127:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;501:1428:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:1428:31;;;-1:-1:-1;501:1428:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;686:610:135;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:135;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:135:o",
  "source": "pragma solidity 0.5.17;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\";\nimport \"../interfaces/TTokenInterface.sol\";\nimport \"../interfaces/SettingsInterface.sol\";\n\n/**\n * @notice This contract represents a wrapped token within the Teller protocol\n *\n * @author develop@teller.finance\n */\ncontract TToken is TTokenInterface, ERC20Detailed, ERC20Mintable {\n    using Address for address;\n\n    /** State Variables */\n\n    SettingsInterface private settings;\n\n    /* Constructor */\n    /**\n     * @param settingsAddress the setting address.\n     * @param name The name of the token\n     * @param symbol The symbol of the token\n     * @param decimals The amount of decimals for the token\n     */\n    constructor(\n        address settingsAddress,\n        string memory name,\n        string memory symbol,\n        uint8 decimals\n    ) public {\n        require(settingsAddress.isContract(), \"SETTINGS_MUST_BE_CONTRACT\");\n        settings = SettingsInterface(settingsAddress);\n        ERC20Detailed.initialize(name, symbol, decimals);\n        ERC20Mintable.initialize(msg.sender);\n    }\n\n    /* Public Functions */\n    /**\n     * @notice Reduce account supply of specified token amount\n     * @param account The account to burn tokens from\n     * @param amount The amount of tokens to burn\n     * @return true if successful\n     */\n    function burn(address account, uint256 amount) public onlyMinter returns (bool) {\n        _burn(account, amount);\n        return true;\n    }\n\n    /** Internal Functions */\n\n    /**\n        @notice Gets the current settings contract.\n        @return the setting contract instance.\n     */\n    function _settings() internal view returns (SettingsInterface) {\n        return settings;\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10100
      ]
    },
    "id": 10101,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10016,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10017,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23265,
        "src": "25:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10018,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23314,
        "src": "116:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10019,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23678,
        "src": "207:78:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol",
        "file": "../interfaces/TTokenInterface.sol",
        "id": 10020,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 12094,
        "src": "286:43:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10021,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 12070,
        "src": "330:45:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10022,
              "name": "TTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12093,
              "src": "520:15:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TTokenInterface_$12093",
                "typeString": "contract TTokenInterface"
              }
            },
            "id": 10023,
            "nodeType": "InheritanceSpecifier",
            "src": "520:15:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10024,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23264,
              "src": "537:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23264",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10025,
            "nodeType": "InheritanceSpecifier",
            "src": "537:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10026,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23313,
              "src": "552:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$23313",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10027,
            "nodeType": "InheritanceSpecifier",
            "src": "552:13:31"
          }
        ],
        "contractDependencies": [
          11230,
          12093,
          21809,
          22013,
          23156,
          23264,
          23313,
          23382,
          23870
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10100,
        "linearizedBaseContracts": [
          10100,
          23313,
          22013,
          23156,
          23264,
          12093,
          11230,
          23382,
          21809,
          23870
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10030,
            "libraryName": {
              "contractScope": null,
              "id": 10028,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23677,
              "src": "578:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$23677",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "572:26:31",
            "typeName": {
              "id": 10029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10032,
            "name": "settings",
            "nodeType": "VariableDeclaration",
            "scope": 10100,
            "src": "632:34:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SettingsInterface_$12069",
              "typeString": "contract SettingsInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10031,
              "name": "SettingsInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12069,
              "src": "632:17:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                "typeString": "contract SettingsInterface"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10071,
              "nodeType": "Block",
              "src": "1048:242:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10044,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10034,
                            "src": "1066:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23629,
                          "src": "1066:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f434f4e5452414354",
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        24003,
                        24004
                      ],
                      "referencedDeclaration": 24004,
                      "src": "1058:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:66:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10049,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:66:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10050,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10032,
                      "src": "1134:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10052,
                          "name": "settingsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10034,
                          "src": "1163:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10051,
                        "name": "SettingsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12069,
                        "src": "1145:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$12069_$",
                          "typeString": "type(contract SettingsInterface)"
                        }
                      },
                      "id": 10053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1145:34:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "src": "1134:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10059,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10036,
                        "src": "1214:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10060,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10038,
                        "src": "1220:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10061,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10040,
                        "src": "1228:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10056,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "1189:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23264_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23235,
                      "src": "1189:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10063,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:48:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24000,
                          "src": "1272:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1272:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10064,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23313,
                        "src": "1247:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$23313_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23289,
                      "src": "1247:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10070,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:36:31"
                }
              ]
            },
            "documentation": "@param settingsAddress the setting address.\n@param name The name of the token\n@param symbol The symbol of the token\n@param decimals The amount of decimals for the token",
            "id": 10072,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10034,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "929:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10036,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "962:18:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10035,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10038,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "990:20:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10037,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10040,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "1020:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10039,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:121:31"
            },
            "returnParameters": {
              "id": 10042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1048:0:31"
            },
            "scope": 10100,
            "src": "908:382:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "1620:60:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10084,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "1636:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10085,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10076,
                        "src": "1645:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10083,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23080,
                      "src": "1630:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:22:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1669:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10082,
                  "id": 10089,
                  "nodeType": "Return",
                  "src": "1662:11:31"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10091,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10079,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10078,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21942,
                  "src": "1594:10:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1594:10:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10074,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1554:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10076,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1571:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:33:31"
            },
            "returnParameters": {
              "id": 10082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10081,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1614:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:6:31"
            },
            "scope": 10100,
            "src": "1540:140:31",
            "stateMutability": "nonpayable",
            "superFunction": 12083,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10098,
              "nodeType": "Block",
              "src": "1895:32:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10096,
                    "name": "settings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10032,
                    "src": "1912:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 10095,
                  "id": 10097,
                  "nodeType": "Return",
                  "src": "1905:15:31"
                }
              ]
            },
            "documentation": "@notice Gets the current settings contract.\n@return the setting contract instance.",
            "id": 10099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:31"
            },
            "returnParameters": {
              "id": 10095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10094,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10099,
                  "src": "1876:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10093,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12069,
                    "src": "1876:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:19:31"
            },
            "scope": 10100,
            "src": "1832:95:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10101,
        "src": "501:1428:31"
      }
    ],
    "src": "0:1930:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10100
      ]
    },
    "id": 10101,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10016,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10017,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23265,
        "src": "25:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10018,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23314,
        "src": "116:90:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10019,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 23678,
        "src": "207:78:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol",
        "file": "../interfaces/TTokenInterface.sol",
        "id": 10020,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 12094,
        "src": "286:43:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10021,
        "nodeType": "ImportDirective",
        "scope": 10101,
        "sourceUnit": 12070,
        "src": "330:45:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10022,
              "name": "TTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12093,
              "src": "520:15:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TTokenInterface_$12093",
                "typeString": "contract TTokenInterface"
              }
            },
            "id": 10023,
            "nodeType": "InheritanceSpecifier",
            "src": "520:15:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10024,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23264,
              "src": "537:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23264",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10025,
            "nodeType": "InheritanceSpecifier",
            "src": "537:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10026,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23313,
              "src": "552:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$23313",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10027,
            "nodeType": "InheritanceSpecifier",
            "src": "552:13:31"
          }
        ],
        "contractDependencies": [
          11230,
          12093,
          21809,
          22013,
          23156,
          23264,
          23313,
          23382,
          23870
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10100,
        "linearizedBaseContracts": [
          10100,
          23313,
          22013,
          23156,
          23264,
          12093,
          11230,
          23382,
          21809,
          23870
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10030,
            "libraryName": {
              "contractScope": null,
              "id": 10028,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23677,
              "src": "578:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$23677",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "572:26:31",
            "typeName": {
              "id": 10029,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10032,
            "name": "settings",
            "nodeType": "VariableDeclaration",
            "scope": 10100,
            "src": "632:34:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SettingsInterface_$12069",
              "typeString": "contract SettingsInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10031,
              "name": "SettingsInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12069,
              "src": "632:17:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                "typeString": "contract SettingsInterface"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10071,
              "nodeType": "Block",
              "src": "1048:242:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10044,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10034,
                            "src": "1066:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23629,
                          "src": "1066:26:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f434f4e5452414354",
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        24003,
                        24004
                      ],
                      "referencedDeclaration": 24004,
                      "src": "1058:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:66:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10049,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:66:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10050,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10032,
                      "src": "1134:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10052,
                          "name": "settingsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10034,
                          "src": "1163:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10051,
                        "name": "SettingsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12069,
                        "src": "1145:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$12069_$",
                          "typeString": "type(contract SettingsInterface)"
                        }
                      },
                      "id": 10053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1145:34:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "src": "1134:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "id": 10055,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10059,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10036,
                        "src": "1214:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10060,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10038,
                        "src": "1220:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10061,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10040,
                        "src": "1228:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10056,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "1189:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23264_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23235,
                      "src": "1189:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:48:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10063,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:48:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24000,
                          "src": "1272:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1272:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10064,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23313,
                        "src": "1247:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$23313_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23289,
                      "src": "1247:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10070,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:36:31"
                }
              ]
            },
            "documentation": "@param settingsAddress the setting address.\n@param name The name of the token\n@param symbol The symbol of the token\n@param decimals The amount of decimals for the token",
            "id": 10072,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10034,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "929:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10036,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "962:18:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10035,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10038,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "990:20:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10037,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10040,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 10072,
                  "src": "1020:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10039,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:121:31"
            },
            "returnParameters": {
              "id": 10042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1048:0:31"
            },
            "scope": 10100,
            "src": "908:382:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "1620:60:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10084,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "1636:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10085,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10076,
                        "src": "1645:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10083,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23080,
                      "src": "1630:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:22:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1669:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10082,
                  "id": 10089,
                  "nodeType": "Return",
                  "src": "1662:11:31"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10091,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10079,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10078,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21942,
                  "src": "1594:10:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1594:10:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10074,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1554:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10076,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1571:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:33:31"
            },
            "returnParameters": {
              "id": 10082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10081,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "1614:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:6:31"
            },
            "scope": 10100,
            "src": "1540:140:31",
            "stateMutability": "nonpayable",
            "superFunction": 12083,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10098,
              "nodeType": "Block",
              "src": "1895:32:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10096,
                    "name": "settings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10032,
                    "src": "1912:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 10095,
                  "id": 10097,
                  "nodeType": "Return",
                  "src": "1905:15:31"
                }
              ]
            },
            "documentation": "@notice Gets the current settings contract.\n@return the setting contract instance.",
            "id": 10099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:31"
            },
            "returnParameters": {
              "id": 10095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10094,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10099,
                  "src": "1876:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10093,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12069,
                    "src": "1876:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12069",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:19:31"
            },
            "scope": 10100,
            "src": "1832:95:31",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10101,
        "src": "501:1428:31"
      }
    ],
    "src": "0:1930:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x40ca8308d93A4417F0A67eB7B47c24E1DFE74816",
      "transactionHash": "0x022f01b8da95f64451faecfa3dbc939f7593bbfbedbf07fd33ca421027e3947b"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-01-19T18:18:09.802Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "account": "The account to burn tokens from",
          "amount": "The amount of tokens to burn"
        },
        "return": "true if successful"
      },
      "constructor": {
        "params": {
          "decimals": "The amount of decimals for the token",
          "name": "The name of the token",
          "settingsAddress": "the setting address.",
          "symbol": "The symbol of the token"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "mint(address,uint256)": {
        "details": "See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "Reduce account supply of specified token amount"
      }
    },
    "notice": "This contract represents a wrapped token within the Teller protocol"
  }
}