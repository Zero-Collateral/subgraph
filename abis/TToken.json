{
  "contractName": "TToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"account\":\"The account to burn tokens from\",\"amount\":\"The amount of tokens to burn\"},\"return\":\"true if successful\"},\"constructor\":{\"params\":{\"decimals\":\"The amount of decimals for the token\",\"name\":\"The name of the token\",\"settingsAddress\":\"the setting address.\",\"symbol\":\"The symbol of the token\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Reduce account supply of specified token amount\"}},\"notice\":\"This contract represents a wrapped token within the Teller protocol\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol\":\"TToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol\":{\"keccak256\":\"0xaffbf121a696d5e110cb7ea76c7fd388d517a858d469eaae975b3c48303cdf22\",\"urls\":[\"bzz-raw://74fb07b9ae67ad526f7a4a223c056568e9f1c7d6b776cddd1590187a84457610\",\"dweb:/ipfs/QmYBgtop761FfeNPp4RQw14XHFpqxARaQwNvR7wDF1GUrs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0x2f54118d65cd07ffb7a476768412b60cfacb12c6dc161b43e1c443d1d01563a2\",\"urls\":[\"bzz-raw://e56918727ce72a8526fbb96671fa4693d0b66bca321d3c93921ced6daecc69c5\",\"dweb:/ipfs/QmUeJuNbhZic68Fsv6fw9zJ5RAJXnvjsno4HfnPajZkrLp\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x0f9dff48f66394074223b6c2b432ac9b31157387278d4d2705140873b79dd6c0\",\"urls\":[\"bzz-raw://f52365ae93794ae0fbd7e2ebf7b7eda4e8cbc19d23da2ef110e7ba9dac1d08b4\",\"dweb:/ipfs/QmVj6waeBLkkug1WvfaTtFbSznxgCa7VdX3EefW31cFUzy\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xb682b7dd6037616e2fbeee046cabfae7cc30fe5fb1bfe07545cae55d45598f04\",\"urls\":[\"bzz-raw://ce19ff7060f8363e815830666c29d0cee1545faf91f8cde6805eb77d9f671107\",\"dweb:/ipfs/QmQLz1iJqaufq7oJQhvUFEDBwDqcKnU9aijyLpzjVw1NyV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xc7ba06d799d541aeb729a24f034411088d0be05d1dc14d9a21b24e795c3655ca\",\"urls\":[\"bzz-raw://734aaa2125260d39fc082e838a27eff2e59eed99a902ae391041193c90c76cba\",\"dweb:/ipfs/QmcJqbmicFgZ3TYapoq4BRiHPi8ohQvq7Rm2nVERRnE2x8\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol\":{\"keccak256\":\"0xd58c8a686cb5a8ebabf20f606a00f90a01c2755e6ace9250b0d012fe7e7d380b\",\"urls\":[\"bzz-raw://896d7ec95853bc618df58ecf8b3ff049473de361261108f89dfe7a8f5ae399f3\",\"dweb:/ipfs/QmSCg4LmKYFw1TAd5tvMqhXAkoYnRNEUaTiR3RcmDPUVVk\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkAggregator.sol\":{\"keccak256\":\"0x162b32975e272aa1d86e9a36135d7da30a2dde633ac286e2ca54e6f734c083ea\",\"urls\":[\"bzz-raw://5df615261bc912ecf55210d58bff6122194b243236938d4f489e9053ab648c3e\",\"dweb:/ipfs/QmRokEM614TJUk1pDCo9uEd9CUSANHC73yx3RNZNmiNtDY\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0x7e12ce3c6031a328505a2b08908c57b9cd8ed9c7f1a745d0d01e87e7df4b0302\",\"urls\":[\"bzz-raw://9f91ccdd8a0093f31af3e000477a1132f75d1f28802d0732ff0db4f74043e78e\",\"dweb:/ipfs/QmWCbuh5W96k21SaXqQNyJgd6kcpvV6Tn79WukFoGNC4Qk\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0xb486425f13ac86dba740eb001f396e9ace7eea05b2b93c82401a547ee7a0939d\",\"urls\":[\"bzz-raw://bb01d4a5390db3b56eef884e47b924ddb5eebb4a5110087666a4911be377c0dd\",\"dweb:/ipfs/QmPSTZcz8sLhdRMX1gvv2RgEUAfPXXgPZEUHarSecMQut9\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0x73f11609bd3b725b7b5c09bd28df775f3b28d763202bc7c51e58672e0b44ce13\",\"urls\":[\"bzz-raw://e846b0a327e12edda332d64046b209127d1f0b2182e944622ad23e9377cfd43b\",\"dweb:/ipfs/QmZA3EToKyzWotYJEDbf89Y4dSFsAVvFn6VhihMJvchdUo\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0x495994c22abe49102a07124246ba74c3634d24d892e5be5236f4759317929f4c\",\"urls\":[\"bzz-raw://894d643a4c7a1b5d7e59a282df6ab7f371fcffd97df31b4b5d65d36f3de0c493\",\"dweb:/ipfs/QmTBmxEXyKEEkmT56nTiFD57wkDkdkhADL7vUtU3GRs8Gh\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x04166c41cc5ea842e57ba32f85f70f6e6722eadbef2e375df5f30562cfd1f47f\",\"urls\":[\"bzz-raw://1bd1a75b168e5dc78a6f5b115c53e0053af8d2d4b352bf34ce2ca1e5ef78a40b\",\"dweb:/ipfs/QmQ42yWYF1hSmnuH7nnHnPMEBoetPZ88MyaB4Agmbkwsfa\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersLib.sol\":{\"keccak256\":\"0xaa858071cda31070104f3ad479213c5fa4d898568823c98b18de60cb1c097c21\",\"urls\":[\"bzz-raw://1d1c87d6a3022d35f30153b4398051756842395ab9d48f1caeb2b1f2ef16937d\",\"dweb:/ipfs/QmNPMUw2fQTyD2Xad4WqoGfndMWw1giUUUw3xcBTgGpY4b\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0x9ca0cf29639d6ba82422393225370ea254810cefa0344f67b27b7f2e8ede3a08\",\"urls\":[\"bzz-raw://48900f9adc7699ebfc1cd0619f0872aa2ec759aa10eed8fcf80c18c02d1cc8e1\",\"dweb:/ipfs/QmcCseVVEri5tVcLUyPrXtqtdfoLvyPyJtg7A8C4HAGfV4\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0a63860141bab4588a5cd4af606b9a27ddd29aa7554029cb8b89b703d444f28b\",\"urls\":[\"bzz-raw://26c98caa3604ff8fca7ad11716bdec73ffc17195a74dac4ef61c6e2373edecda\",\"dweb:/ipfs/QmcxyVdVmQfXWpc6MJXauquD8hT5XVVcVLCfUouHUrXf98\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xca2fcf9f0dd47ee5bab08cd1a2e6afd21a5321ac362a2dc0fdfa4f6b2111cb82\",\"urls\":[\"bzz-raw://e3e0a2c16d752ac56233967a39b36e9e271f1619e7b83307f7ef6210d966cd6d\",\"dweb:/ipfs/QmSAFs8A3XeNTDkSLYH39NUa4C3veFnz2ySpheSeQUERYf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0xd7ffb2341a0a8838ad16282fb68179912a8d020573bf249d1a0a096a6a9ede0e\",\"urls\":[\"bzz-raw://96d95abcb736512e5759430787108baee0f8d34ee7ef94e75b916dd9f263541f\",\"dweb:/ipfs/Qmf24oMNib5XznqoAvAbyShqCgSWXBfTpnU5Cccu6ubjgv\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x64fa8b255860b1cf2661a2d87ca287c21479edf18673ca694a770b6498e2de39\",\"urls\":[\"bzz-raw://ee19cc8583ee342d285c32a74bdc6050ac3fda11530a20fddadc8b1e9cc8f9be\",\"dweb:/ipfs/QmYRwA8umXm2gBbeWDVXWA1ADVFJu2eVn1xofkCGJrkxkz\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xacc87fdd0c5891084d0a2d801bb968d864f6bebacad14767a399b5b0ad3511f3\",\"urls\":[\"bzz-raw://d7eab097c04947df94daf86e2a5f6f461774028ba9e85d30b91550c6a42954bc\",\"dweb:/ipfs/QmPmVqMzTqBWh5Dcfo1U7bmUMGDLCEZPqwmRVukyM8YxcB\"]},\"@chainlink/contracts/src/v0.5/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x636b9f52b4ef5795c35a189a94e95a8f909ed1f7ef799e0218b71d97b3a780a0\",\"urls\":[\"bzz-raw://5c4813bfde66e6d6790eab4b44cf99b5eefe675f9726af454d8885c5c9959db4\",\"dweb:/ipfs/QmT83dCUn1yJFN9ftoJ9RWmJfsYosNyktuQkjRRfDWGLzp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x2a474399663812668bb8e9c9e7d011d54fd09de386bd6e9fcb2407a677ebd1aa\",\"urls\":[\"bzz-raw://93754fbe81bcf1f111288152c40987a9fd7cdb43dc72b9f8d7eabb96a4fa9976\",\"dweb:/ipfs/QmNZadpwGrNYB6jndNcAk6dT7f6HHMZBPXdNTa5fKu3HVp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x4342dbe1cb06cc0f0ee8929d6ab41ac68e39a1bac3b9c593e205a358ad243aee\",\"urls\":[\"bzz-raw://15a916b9dd4a3597f25381adfd5cf9abf8fbf3dab78ff001f63bc471b1cdb8f7\",\"dweb:/ipfs/QmeALu4iYnRtoPbnt5xcHHNpTqV3rPQg5Xg7rK67KqA3RB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "501:1428:33:-;;;908:382;8:9:-1;5:2;;;30:1;27;20:12;5:2;908:382:33;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;908:382:33;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;908:382:33;;420:4:-1;411:14;;;;908:382:33;;;;;411:14:-1;908:382:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;908:382:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;908:382:33;;420:4:-1;411:14;;;;908:382:33;;;;;411:14:-1;908:382:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;908:382:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;908:382:33;;;;;;;;-1:-1:-1;1066:28:33;;-1:-1:-1;;;;;;1066:26:33;;;;;;;;:28;;:::i;:::-;1058:66;;;;;-1:-1:-1;;;1058:66:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:8;:45;;-1:-1:-1;;;;;;1134:45:33;-1:-1:-1;;;;;1134:45:33;;;;;1189:48;1214:4;1220:6;1228:8;1189:24;;;;;;;:48;;:::i;:::-;1247:36;1272:10;1247:24;;;;;:36;;:::i;:::-;908:382;;;;501:1428;;686:610:141;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:141;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:141:o;492:182:137:-;1024:12:144;;;;;;;;:31;;-1:-1:-1;1040:15:144;-1:-1:-1;;;;;1040:13:144;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:137;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:137;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:137;:20;;-1:-1:-1;;647:20:137;;;;;;;1264:55:144;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:144;;;1264:55;492:182:137;;;;:::o;448:101:138:-;1024:12:144;;;;;;;;:31;;-1:-1:-1;1040:15:144;-1:-1:-1;;;;;1040:13:144;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:138;535:6;513:21;;;;;:29;;:::i;:::-;1268:14:144;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:144;;;1264:55;448:101:138;;:::o;1409:498:144:-;1820:4;1864:17;1895:7;1409:498;;:::o;361:137:126:-;1024:12:144;;;;;;;;:31;;-1:-1:-1;1040:15:144;-1:-1:-1;;;;;1040:13:144;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:126;440:6;-1:-1:-1;;;;;431:8:126;:16;:::i;:::-;426:66;;463:18;474:6;-1:-1:-1;;;;;463:10:126;:18;:::i;643:107::-;699:4;722:21;735:7;722:8;:12;;;;;;:21;;;;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:126:o;935:119::-;991:21;1004:7;991:8;:12;;;;;;:21;;;;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:126;;;;;;;;935:119;:::o;779:200:125:-;851:4;-1:-1:-1;;;;;875:21:125;;867:68;;;;-1:-1:-1;;;867:68:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:125;:11;:20;;;;;;;;;;;;;;;779:200::o;260:175::-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:125;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:125;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:125;424:4;401:27;;;260:175::o;501:1428:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:1428:33;;;-1:-1:-1;501:1428:33;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "501:1428:33:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;501:1428:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:137;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:149:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:135;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:137;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:137;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:137;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:137;;;;;;;;-1:-1:-1;492:182:137;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:137;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:137;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:137;;-1:-1:-1;;;492:182:137;;;;;-1:-1:-1;492:182:137;;-1:-1:-1;492:182:137:i;:::-;;1636:89:135;;;:::i;:::-;;;;;;;;;;;;;;;;3184:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:135;;;;;;;;;;;;;;;;;:::i;1567:81:137:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:135;;;;;;;;:::i;685:140:138:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;685:140:138;;;;;;;;:::i;1783:108:135:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:135;-1:-1:-1;;;;;1783:108:135;;:::i;933:85:137:-;;;:::i;756:90:126:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:126;-1:-1:-1;;;;;756:90:126;;:::i;852:77::-;;;:::i;1540:140:33:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1540:140:33;;;;;;;;:::i;4573:258:135:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:135;;;;;;;;:::i;2094:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2094:155:135;;;;;;;;:::i;643:107:126:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:126;-1:-1:-1;;;;;643:107:126;;:::i;448:101:138:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;448:101:138;-1:-1:-1;;;;;448:101:138;;:::i;2307:132:135:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:135;;;;;;;;;;:::i;739:81:137:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2577:149:135:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:135;2577:149;;;;:::o;492:182:137:-;1024:12:144;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:137;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:137;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:137;:20;;-1:-1:-1;;647:20:137;;;;;;;1264:55:144;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:144;;;1264:55;492:182:137;;;;:::o;1636:89:135:-;1706:12;;1636:89;:::o;3184:300::-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:135;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:135;;;;;;;;;;;;-1:-1:-1;3366:33:135;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:135;3184:300;;;;;:::o;1567:81:137:-;1632:9;;;;1567:81;:::o;3879:207:135:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:135;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:135;;;:34;;;;;;;;;;;:50;:38;:50;:::i;685:140:138:-;759:4;544:22:126;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:22:138;781:7;790:6;775:5;:22::i;1783:108:135:-;-1:-1:-1;;;;;1866:18:135;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;933:85:137:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;756:90:126;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1540:140:33:-;1614:4;544:22:126;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:22:33;1636:7;1645:6;1630:5;:22::i;4573:258:135:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:135;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:135;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2094:155::-;2163:4;2179:42;2189:12;:10;:12::i;:::-;2203:9;2214:6;2179:9;:42::i;643:107:126:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;:::-;715:28;643:107;-1:-1:-1;;643:107:126:o;448:101:138:-;1024:12:144;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;513:29:138;535:6;513:21;:29::i;:::-;1268:14:144;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:144;;;1264:55;448:101:138;;:::o;2307:132:135:-;-1:-1:-1;;;;;2405:18:135;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;867:96:124:-;946:10;867:96;:::o;7427:332:135:-;-1:-1:-1;;;;;7520:19:135;;7512:68;;;;-1:-1:-1;;;7512:68:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7598:21:135;;7590:68;;;;-1:-1:-1;;;7590:68:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7669:18:135;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7720:32;;;;;;;;;;;;;;;;;7427:332;;;:::o;1409:498:144:-;1820:4;1864:17;1895:7;1409:498;:::o;5305:464:135:-;-1:-1:-1;;;;;5402:20:135;;5394:70;;;;-1:-1:-1;;;5394:70:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:135;;5474:71;;;;-1:-1:-1;;;5474:71:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:135;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:135;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:135;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;;;;;;;;;;5305:464;;;:::o;1732:187:133:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:133;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:133:o;6039:302:135:-;-1:-1:-1;;;;;6114:21:135;;6106:65;;;;;-1:-1:-1;;;6106:65:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:135;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:135;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;6297:37;;;;;;;;;;6039:302;;:::o;935:119:126:-;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:126;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:126;;;;;;;;1060:127;:::o;6660:342:135:-;-1:-1:-1;;;;;6735:21:135;;6727:67;;;;-1:-1:-1;;;6727:67:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6826:68;6849:6;6826:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6826:18:135;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6805:18:135;;;;;;:9;:18;;;;;:89;6919:12;;:24;;6936:6;6919:24;:16;:24;:::i;:::-;6904:12;:39;6958:37;;;;;;;;6984:1;;-1:-1:-1;;;;;6958:37:135;;;;;;;;;;;;6660:342;;:::o;779:200:125:-;851:4;-1:-1:-1;;;;;875:21:125;;867:68;;;;-1:-1:-1;;;867:68:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:125;:11;:20;;;;;;;;;;;;;;;779:200::o;361:137:126:-;1024:12:144;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:144;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:144;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:126;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;260:175:125:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:125;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:125;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:125;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:125;;;510:180::o;1274:134:133:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;501:1428:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:1428:33;;;-1:-1:-1;501:1428:33;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;686:610:141;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:141;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:141:o",
  "source": "pragma solidity 0.5.17;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\";\nimport \"../interfaces/TTokenInterface.sol\";\nimport \"../interfaces/SettingsInterface.sol\";\n\n/**\n * @notice This contract represents a wrapped token within the Teller protocol\n *\n * @author develop@teller.finance\n */\ncontract TToken is TTokenInterface, ERC20Detailed, ERC20Mintable {\n    using Address for address;\n\n    /** State Variables */\n\n    SettingsInterface private settings;\n\n    /* Constructor */\n    /**\n     * @param settingsAddress the setting address.\n     * @param name The name of the token\n     * @param symbol The symbol of the token\n     * @param decimals The amount of decimals for the token\n     */\n    constructor(\n        address settingsAddress,\n        string memory name,\n        string memory symbol,\n        uint8 decimals\n    ) public {\n        require(settingsAddress.isContract(), \"SETTINGS_MUST_BE_CONTRACT\");\n        settings = SettingsInterface(settingsAddress);\n        ERC20Detailed.initialize(name, symbol, decimals);\n        ERC20Mintable.initialize(msg.sender);\n    }\n\n    /* Public Functions */\n    /**\n     * @notice Reduce account supply of specified token amount\n     * @param account The account to burn tokens from\n     * @param amount The amount of tokens to burn\n     * @return true if successful\n     */\n    function burn(address account, uint256 amount) public onlyMinter returns (bool) {\n        _burn(account, amount);\n        return true;\n    }\n\n    /** Internal Functions */\n\n    /**\n        @notice Gets the current settings contract.\n        @return the setting contract instance.\n     */\n    function _settings() internal view returns (SettingsInterface) {\n        return settings;\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10547
      ]
    },
    "id": 10548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10463,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10464,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 23980,
        "src": "25:90:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10465,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 24029,
        "src": "116:90:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10466,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 24393,
        "src": "207:78:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol",
        "file": "../interfaces/TTokenInterface.sol",
        "id": 10467,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 12715,
        "src": "286:43:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10468,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 12691,
        "src": "330:45:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10469,
              "name": "TTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12714,
              "src": "520:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TTokenInterface_$12714",
                "typeString": "contract TTokenInterface"
              }
            },
            "id": 10470,
            "nodeType": "InheritanceSpecifier",
            "src": "520:15:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10471,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23979,
              "src": "537:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23979",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10472,
            "nodeType": "InheritanceSpecifier",
            "src": "537:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10473,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24028,
              "src": "552:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$24028",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10474,
            "nodeType": "InheritanceSpecifier",
            "src": "552:13:33"
          }
        ],
        "contractDependencies": [
          12714,
          22267,
          22471,
          23871,
          23979,
          24028,
          24097,
          24585
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10547,
        "linearizedBaseContracts": [
          10547,
          24028,
          22471,
          23871,
          23979,
          12714,
          24097,
          22267,
          24585
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10477,
            "libraryName": {
              "contractScope": null,
              "id": 10475,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24392,
              "src": "578:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$24392",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "572:26:33",
            "typeName": {
              "id": 10476,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:33",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10479,
            "name": "settings",
            "nodeType": "VariableDeclaration",
            "scope": 10547,
            "src": "632:34:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SettingsInterface_$12690",
              "typeString": "contract SettingsInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10478,
              "name": "SettingsInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12690,
              "src": "632:17:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                "typeString": "contract SettingsInterface"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10518,
              "nodeType": "Block",
              "src": "1048:242:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10491,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10481,
                            "src": "1066:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24344,
                          "src": "1066:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:28:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f434f4e5452414354",
                        "id": 10494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        24718,
                        24719
                      ],
                      "referencedDeclaration": 24719,
                      "src": "1058:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10496,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10497,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10479,
                      "src": "1134:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10499,
                          "name": "settingsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10481,
                          "src": "1163:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10498,
                        "name": "SettingsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12690,
                        "src": "1145:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$12690_$",
                          "typeString": "type(contract SettingsInterface)"
                        }
                      },
                      "id": 10500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1145:34:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "src": "1134:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "id": 10502,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:45:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10506,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10483,
                        "src": "1214:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10507,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10485,
                        "src": "1220:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10508,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10487,
                        "src": "1228:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10503,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23979,
                        "src": "1189:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23979_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23950,
                      "src": "1189:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10510,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:48:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24715,
                          "src": "1272:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1272:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10511,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24028,
                        "src": "1247:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$24028_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24004,
                      "src": "1247:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:36:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10517,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:36:33"
                }
              ]
            },
            "documentation": "@param settingsAddress the setting address.\n@param name The name of the token\n@param symbol The symbol of the token\n@param decimals The amount of decimals for the token",
            "id": 10519,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10481,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "929:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10483,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "962:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10482,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10485,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "990:20:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10487,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "1020:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:121:33"
            },
            "returnParameters": {
              "id": 10489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1048:0:33"
            },
            "scope": 10547,
            "src": "908:382:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10537,
              "nodeType": "Block",
              "src": "1620:60:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10531,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10521,
                        "src": "1636:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10532,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10523,
                        "src": "1645:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10530,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23795,
                      "src": "1630:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:22:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10534,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:22:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1669:4:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10529,
                  "id": 10536,
                  "nodeType": "Return",
                  "src": "1662:11:33"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10526,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10525,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22400,
                  "src": "1594:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1594:10:33"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10521,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1554:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10523,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1571:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:33:33"
            },
            "returnParameters": {
              "id": 10529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10528,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1614:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:6:33"
            },
            "scope": 10547,
            "src": "1540:140:33",
            "stateMutability": "nonpayable",
            "superFunction": 12704,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10545,
              "nodeType": "Block",
              "src": "1895:32:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10543,
                    "name": "settings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10479,
                    "src": "1912:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 10542,
                  "id": 10544,
                  "nodeType": "Return",
                  "src": "1905:15:33"
                }
              ]
            },
            "documentation": "@notice Gets the current settings contract.\n@return the setting contract instance.",
            "id": 10546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:33"
            },
            "returnParameters": {
              "id": 10542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10541,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10546,
                  "src": "1876:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10540,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12690,
                    "src": "1876:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:19:33"
            },
            "scope": 10547,
            "src": "1832:95:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10548,
        "src": "501:1428:33"
      }
    ],
    "src": "0:1930:33"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TToken.sol",
    "exportedSymbols": {
      "TToken": [
        10547
      ]
    },
    "id": 10548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10463,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10464,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 23980,
        "src": "25:90:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 10465,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 24029,
        "src": "116:90:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
        "id": 10466,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 24393,
        "src": "207:78:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/TTokenInterface.sol",
        "file": "../interfaces/TTokenInterface.sol",
        "id": 10467,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 12715,
        "src": "286:43:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol",
        "file": "../interfaces/SettingsInterface.sol",
        "id": 10468,
        "nodeType": "ImportDirective",
        "scope": 10548,
        "sourceUnit": 12691,
        "src": "330:45:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10469,
              "name": "TTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12714,
              "src": "520:15:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TTokenInterface_$12714",
                "typeString": "contract TTokenInterface"
              }
            },
            "id": 10470,
            "nodeType": "InheritanceSpecifier",
            "src": "520:15:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10471,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23979,
              "src": "537:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$23979",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 10472,
            "nodeType": "InheritanceSpecifier",
            "src": "537:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10473,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24028,
              "src": "552:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$24028",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 10474,
            "nodeType": "InheritanceSpecifier",
            "src": "552:13:33"
          }
        ],
        "contractDependencies": [
          12714,
          22267,
          22471,
          23871,
          23979,
          24028,
          24097,
          24585
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract represents a wrapped token within the Teller protocol\n * @author develop@teller.finance",
        "fullyImplemented": true,
        "id": 10547,
        "linearizedBaseContracts": [
          10547,
          24028,
          22471,
          23871,
          23979,
          12714,
          24097,
          22267,
          24585
        ],
        "name": "TToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10477,
            "libraryName": {
              "contractScope": null,
              "id": 10475,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24392,
              "src": "578:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$24392",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "572:26:33",
            "typeName": {
              "id": 10476,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:33",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 10479,
            "name": "settings",
            "nodeType": "VariableDeclaration",
            "scope": 10547,
            "src": "632:34:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SettingsInterface_$12690",
              "typeString": "contract SettingsInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 10478,
              "name": "SettingsInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12690,
              "src": "632:17:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                "typeString": "contract SettingsInterface"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10518,
              "nodeType": "Block",
              "src": "1048:242:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 10491,
                            "name": "settingsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10481,
                            "src": "1066:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 10492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24344,
                          "src": "1066:26:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1066:28:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53455454494e47535f4d5553545f42455f434f4e5452414354",
                        "id": 10494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1096:27:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        },
                        "value": "SETTINGS_MUST_BE_CONTRACT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79507be1209e499f4f8c79d26cd97cc0e0fe5d18d60c43d8a242e90a69112cc0",
                          "typeString": "literal_string \"SETTINGS_MUST_BE_CONTRACT\""
                        }
                      ],
                      "id": 10490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        24718,
                        24719
                      ],
                      "referencedDeclaration": 24719,
                      "src": "1058:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:66:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10496,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:66:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10497,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10479,
                      "src": "1134:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 10499,
                          "name": "settingsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10481,
                          "src": "1163:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10498,
                        "name": "SettingsInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12690,
                        "src": "1145:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SettingsInterface_$12690_$",
                          "typeString": "type(contract SettingsInterface)"
                        }
                      },
                      "id": 10500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1145:34:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                        "typeString": "contract SettingsInterface"
                      }
                    },
                    "src": "1134:45:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "id": 10502,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:45:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10506,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10483,
                        "src": "1214:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10507,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10485,
                        "src": "1220:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10508,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10487,
                        "src": "1228:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10503,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23979,
                        "src": "1189:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$23979_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 10505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23950,
                      "src": "1189:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 10509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10510,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:48:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10514,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24715,
                          "src": "1272:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1272:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10511,
                        "name": "ERC20Mintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24028,
                        "src": "1247:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$24028_$",
                          "typeString": "type(contract ERC20Mintable)"
                        }
                      },
                      "id": 10513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24004,
                      "src": "1247:24:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:36:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10517,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:36:33"
                }
              ]
            },
            "documentation": "@param settingsAddress the setting address.\n@param name The name of the token\n@param symbol The symbol of the token\n@param decimals The amount of decimals for the token",
            "id": 10519,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10481,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "929:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10483,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "962:18:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10482,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10485,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "990:20:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10487,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 10519,
                  "src": "1020:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:121:33"
            },
            "returnParameters": {
              "id": 10489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1048:0:33"
            },
            "scope": 10547,
            "src": "908:382:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10537,
              "nodeType": "Block",
              "src": "1620:60:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10531,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10521,
                        "src": "1636:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10532,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10523,
                        "src": "1645:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10530,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23795,
                      "src": "1630:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:22:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10534,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:22:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1669:4:33",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10529,
                  "id": 10536,
                  "nodeType": "Return",
                  "src": "1662:11:33"
                }
              ]
            },
            "documentation": "@notice Reduce account supply of specified token amount\n@param account The account to burn tokens from\n@param amount The amount of tokens to burn\n@return true if successful",
            "id": 10538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 10526,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10525,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22400,
                  "src": "1594:10:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1594:10:33"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10521,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1554:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10523,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1571:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:33:33"
            },
            "returnParameters": {
              "id": 10529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10528,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10538,
                  "src": "1614:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:6:33"
            },
            "scope": 10547,
            "src": "1540:140:33",
            "stateMutability": "nonpayable",
            "superFunction": 12704,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10545,
              "nodeType": "Block",
              "src": "1895:32:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10543,
                    "name": "settings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10479,
                    "src": "1912:8:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "functionReturnParameters": 10542,
                  "id": 10544,
                  "nodeType": "Return",
                  "src": "1905:15:33"
                }
              ]
            },
            "documentation": "@notice Gets the current settings contract.\n@return the setting contract instance.",
            "id": 10546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_settings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:33"
            },
            "returnParameters": {
              "id": 10542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10541,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10546,
                  "src": "1876:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                    "typeString": "contract SettingsInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10540,
                    "name": "SettingsInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12690,
                    "src": "1876:17:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SettingsInterface_$12690",
                      "typeString": "contract SettingsInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:19:33"
            },
            "scope": 10547,
            "src": "1832:95:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10548,
        "src": "501:1428:33"
      }
    ],
    "src": "0:1930:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-31T19:21:23.852Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "account": "The account to burn tokens from",
          "amount": "The amount of tokens to burn"
        },
        "return": "true if successful"
      },
      "constructor": {
        "params": {
          "decimals": "The amount of decimals for the token",
          "name": "The name of the token",
          "settingsAddress": "the setting address.",
          "symbol": "The symbol of the token"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "mint(address,uint256)": {
        "details": "See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "Reduce account supply of specified token amount"
      }
    },
    "notice": "This contract represents a wrapped token within the Teller protocol"
  }
}