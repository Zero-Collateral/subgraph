// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class LendingPoolPaused extends EthereumEvent {
  get params(): LendingPoolPaused__Params {
    return new LendingPoolPaused__Params(this);
  }
}

export class LendingPoolPaused__Params {
  _event: LendingPoolPaused;

  constructor(event: LendingPoolPaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lendingPoolAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LendingPoolUnpaused extends EthereumEvent {
  get params(): LendingPoolUnpaused__Params {
    return new LendingPoolUnpaused__Params(this);
  }
}

export class LendingPoolUnpaused__Params {
  _event: LendingPoolUnpaused;

  constructor(event: LendingPoolUnpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lendingPoolAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SettingUpdated extends EthereumEvent {
  get params(): SettingUpdated__Params {
    return new SettingUpdated__Params(this);
  }
}

export class SettingUpdated__Params {
  _event: SettingUpdated;

  constructor(event: SettingUpdated) {
    this._event = event;
  }

  get settingName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get oldValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SettingsInterface extends SmartContract {
  static bind(address: Address): SettingsInterface {
    return new SettingsInterface("SettingsInterface", address);
  }

  requiredSubmissions(): BigInt {
    let result = super.call("requiredSubmissions", []);

    return result[0].toBigInt();
  }

  try_requiredSubmissions(): CallResult<BigInt> {
    let result = super.tryCall("requiredSubmissions", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  maximumTolerance(): BigInt {
    let result = super.call("maximumTolerance", []);

    return result[0].toBigInt();
  }

  try_maximumTolerance(): CallResult<BigInt> {
    let result = super.tryCall("maximumTolerance", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  responseExpiryLength(): BigInt {
    let result = super.call("responseExpiryLength", []);

    return result[0].toBigInt();
  }

  try_responseExpiryLength(): CallResult<BigInt> {
    let result = super.tryCall("responseExpiryLength", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", []);

    return result[0].toBoolean();
  }

  try_isPaused(): CallResult<boolean> {
    let result = super.tryCall("isPaused", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  lendingPoolPaused(lendingPoolAddress: Address): boolean {
    let result = super.call("lendingPoolPaused", [
      EthereumValue.fromAddress(lendingPoolAddress)
    ]);

    return result[0].toBoolean();
  }

  try_lendingPoolPaused(lendingPoolAddress: Address): CallResult<boolean> {
    let result = super.tryCall("lendingPoolPaused", [
      EthereumValue.fromAddress(lendingPoolAddress)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }
}

export class SetRequiredSubmissionsCall extends EthereumCall {
  get inputs(): SetRequiredSubmissionsCall__Inputs {
    return new SetRequiredSubmissionsCall__Inputs(this);
  }

  get outputs(): SetRequiredSubmissionsCall__Outputs {
    return new SetRequiredSubmissionsCall__Outputs(this);
  }
}

export class SetRequiredSubmissionsCall__Inputs {
  _call: SetRequiredSubmissionsCall;

  constructor(call: SetRequiredSubmissionsCall) {
    this._call = call;
  }

  get newRequiredSubmissions(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRequiredSubmissionsCall__Outputs {
  _call: SetRequiredSubmissionsCall;

  constructor(call: SetRequiredSubmissionsCall) {
    this._call = call;
  }
}

export class SetMaximumToleranceCall extends EthereumCall {
  get inputs(): SetMaximumToleranceCall__Inputs {
    return new SetMaximumToleranceCall__Inputs(this);
  }

  get outputs(): SetMaximumToleranceCall__Outputs {
    return new SetMaximumToleranceCall__Outputs(this);
  }
}

export class SetMaximumToleranceCall__Inputs {
  _call: SetMaximumToleranceCall;

  constructor(call: SetMaximumToleranceCall) {
    this._call = call;
  }

  get newMaximumTolerance(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaximumToleranceCall__Outputs {
  _call: SetMaximumToleranceCall;

  constructor(call: SetMaximumToleranceCall) {
    this._call = call;
  }
}

export class SetResponseExpiryLengthCall extends EthereumCall {
  get inputs(): SetResponseExpiryLengthCall__Inputs {
    return new SetResponseExpiryLengthCall__Inputs(this);
  }

  get outputs(): SetResponseExpiryLengthCall__Outputs {
    return new SetResponseExpiryLengthCall__Outputs(this);
  }
}

export class SetResponseExpiryLengthCall__Inputs {
  _call: SetResponseExpiryLengthCall;

  constructor(call: SetResponseExpiryLengthCall) {
    this._call = call;
  }

  get newResponseExpiryLength(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetResponseExpiryLengthCall__Outputs {
  _call: SetResponseExpiryLengthCall;

  constructor(call: SetResponseExpiryLengthCall) {
    this._call = call;
  }
}

export class PauseLendingPoolCall extends EthereumCall {
  get inputs(): PauseLendingPoolCall__Inputs {
    return new PauseLendingPoolCall__Inputs(this);
  }

  get outputs(): PauseLendingPoolCall__Outputs {
    return new PauseLendingPoolCall__Outputs(this);
  }
}

export class PauseLendingPoolCall__Inputs {
  _call: PauseLendingPoolCall;

  constructor(call: PauseLendingPoolCall) {
    this._call = call;
  }

  get lendingPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PauseLendingPoolCall__Outputs {
  _call: PauseLendingPoolCall;

  constructor(call: PauseLendingPoolCall) {
    this._call = call;
  }
}

export class UnpauseLendingPoolCall extends EthereumCall {
  get inputs(): UnpauseLendingPoolCall__Inputs {
    return new UnpauseLendingPoolCall__Inputs(this);
  }

  get outputs(): UnpauseLendingPoolCall__Outputs {
    return new UnpauseLendingPoolCall__Outputs(this);
  }
}

export class UnpauseLendingPoolCall__Inputs {
  _call: UnpauseLendingPoolCall;

  constructor(call: UnpauseLendingPoolCall) {
    this._call = call;
  }

  get lendingPoolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnpauseLendingPoolCall__Outputs {
  _call: UnpauseLendingPoolCall;

  constructor(call: UnpauseLendingPoolCall) {
    this._call = call;
  }
}
